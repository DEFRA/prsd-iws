@model EA.Iws.Web.Areas.AdminImportAssessment.ViewModels.MarkAsInterim.MarkAsInterimViewModel
@using EA.Iws.Core.ImportNotificationAssessment
@using EA.Iws.Core.Shared
@using Resources = EA.Iws.Web.Areas.AdminImportAssessment.Views.MarkAsInterim.IndexResources

@{
    ViewBag.Title = Resources.Title;
}

<h1 class="heading-large">@Resources.Heading</h1>

@if (Model.IsAuthorised)
{
    if (Model.HasAcceptableStatus)
    {
        <h2 class="heading-medium">@Resources.IsThisQuestionHeading</h2>

        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.NotificationId)
            @Html.HiddenFor(m => m.NotificationStatus)
            @Html.HiddenFor(m => m.IsAuthorised)

            @Html.Gds().ValidationSummary()

            <div class="form-group @Html.Gds().FormGroupClass(m => m.IsInterim)">
                @Html.Gds().ValidationMessageFor(m => m.IsInterim)

                <fieldset>
                    <label class="block-label" for="yes">
                        @Html.RadioButtonFor(m => m.IsInterim, true, new { id = "yes" })
                        @Resources.Yes
                    </label>
                    <label class="block-label" for="no">
                        @Html.RadioButtonFor(m => m.IsInterim, false, new { id = "no" })
                        @Resources.No
                    </label>
                </fieldset>
            </div>

            <button type="submit" class="button">@Constants.ContinueButtonText</button>
        }

    }
    else
    {
        <p>@Resources.ThisStatus @EA.Prsd.Core.Helpers.EnumHelper.GetDisplayName(Model.NotificationStatus)</p>
        <div>
            @Resources.StatusErrorMessage
            <ul class="list list-bullet">
                <li>@EA.Prsd.Core.Helpers.EnumHelper.GetDisplayName(ImportNotificationStatus.NotificationReceived)</li>
                <li>@EA.Prsd.Core.Helpers.EnumHelper.GetDisplayName(ImportNotificationStatus.AwaitingPayment)</li>
                <li>@EA.Prsd.Core.Helpers.EnumHelper.GetDisplayName(ImportNotificationStatus.AwaitingAssessment)</li>
                <li>@EA.Prsd.Core.Helpers.EnumHelper.GetDisplayName(ImportNotificationStatus.InAssessment)</li>
                <li>@EA.Prsd.Core.Helpers.EnumHelper.GetDisplayName(ImportNotificationStatus.ReadyToAcknowledge)</li>
                <li>@EA.Prsd.Core.Helpers.EnumHelper.GetDisplayName(ImportNotificationStatus.DecisionRequiredBy)</li>
                <li>or @EA.Prsd.Core.Helpers.EnumHelper.GetDisplayName(ImportNotificationStatus.Consented)</li>
            </ul>
        </div>
    }
}
else
{
    @Resources.AuthorisedOnly
}


@section menu {
    @Html.Action("ImportNavigation", "Menu", new { area = "Admin", section = ImportNavigationSection.Assessment })
}