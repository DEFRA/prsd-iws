@using EA.Iws.Core.Admin
@using EnumHelper = EA.Prsd.Core.Helpers.EnumHelper
@using Resource = EA.Iws.Web.Areas.AdminImportAssessment.Views.Decision.IndexResources
@model EA.Iws.Web.Areas.AdminImportAssessment.ViewModels.Decision.DecisionViewModel

@{
    ViewBag.Title = Resource.Title;
}

<h1 class="heading-large">@Resource.MainHeading</h1>

@using (Html.BeginForm())
{
    @Html.Gds().ValidationSummary()
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Status)

    for (int i = 0; i < Model.DecisionTypes.Count; i++)
    {
        @Html.HiddenFor(m => m.DecisionTypes[i])
    }


    if (!Model.PossibleDecisions.Any())
    {
        <h2 class="heading-medium">@Resource.DecisionHeading</h2>
        <p>
            @Html.Raw(string.Format(Resource.NoAvailableDecisionsParagraphOne, EnumHelper.GetDisplayName(Model.Status)))
        </p>
        <p>
            @Resource.NoAvailableDecisionsParagraphTwo
        </p>
    }
    else
    {
        <div class="form-group @Html.Gds().FormGroupClass(m => m.Decision)">
            @Html.LabelFor(m => m.Decision, new { @class = "form-label-bold" })
            @Html.Gds().ValidationMessageFor(m => m.Decision)
            @Html.Gds().DropDownListFor(m => m.Decision, Model.PossibleDecisions, string.Empty, new { id = "decision-select" })
        </div>

        <div id="@Html.Raw("status" + DecisionType.Consent)" class="js-hidden assessment-decision">
            @Html.Partial("_Consent")
        </div>

        <div id="@Html.Raw("status" + DecisionType.ConsentWithdraw)" class="js-hidden assessment-decision">
            @Html.Partial("_ConsentWithdraw")
        </div>

        <div id="@Html.Raw("status" + DecisionType.Object)" class="js-hidden assessment-decision">
            @Html.Partial("_Object")
        </div>

        <div id="@Html.Raw("status" + DecisionType.Withdraw)" class="js-hidden assessment-decision">
            @Html.Partial("_Withdraw")
        </div>

        <div class="form-group">
            <input type="submit" class="button" value="@Constants.ContinueButtonText" />
        </div>
    }
}

@section scripts{
    <script>
        setDropdownRevealSections("decision-select", "assessment-decision")
    </script>
}

@section menu {
    @Html.Action("ImportNavigation", "Menu", new { area = "Admin", section = ImportNavigationSection.Assessment })
}