@model EA.Iws.Web.Areas.AdminExportNotificationMovements.ViewModels.CaptureMovement.CaptureViewModel

<div>
    @if (Model.Receipt.ShipmentTypes == ShipmentType.Partially || Model.Receipt.ShipmentTypes == ShipmentType.Rejected)
    {
        <div class="form-group" id="dvCommentsOptions" style="display:none">
            @Html.LabelFor(m => m.HasComments, new { @class = "form-label-bold" })
            @Html.Gds().ValidationMessageFor(m => m.HasComments)
            <div class="multiple-choice" data-target="comments">
                @Html.RadioButtonFor(m => m.HasComments, true, new { id = "Comments-Yes" })
                <label for="Comments-Yes">
                    Yes
                </label>
            </div>

            <div class="multiple-choice">
                @Html.RadioButtonFor(m => m.HasComments, false, new { id = "Comments-No" })
                <label for="Comments-No">
                    No
                </label>
            </div>
        </div>

        <div class="form-group @Html.Gds().FormGroupClass(m => m.StatsMarking)" id="dvCommentSelectReasons" style="display:block">
            @Html.LabelFor(m => m.StatsMarking, new { @class = "form-label-bold" })
            @Html.Gds().ValidationMessageFor(m => m.StatsMarking)
            @Html.Gds().DropDownListFor(m => m.StatsMarking, Model.StatsMarkingSelectList, string.Empty)
        </div>

        <div class="form-group @Html.Gds().FormGroupClass(m => m.Comments)" id="dvComments" style="display:none">
            @Html.LabelFor(m => m.Comments, new { @class = "form-label-bold" })
            @Html.Gds().ValidationMessageFor(m => m.Comments)
            @Html.TextAreaFor(m => m.Comments, new { @class = "form-control-wide", rows = 10 })
        </div>
    }
    else
    {
        <div class="form-group @Html.Gds().FormGroupClass(m => m.Comments)" id="dvCommentsOptions" style="display:block">
            @Html.LabelFor(m => m.HasComments, new { @class = "form-label-bold" })
            @Html.Gds().ValidationMessageFor(m => m.HasComments)
            <div class="multiple-choice" data-target="comments">
                @Html.RadioButtonFor(m => m.HasComments, true, new { id = "Comments-Yes" })
                <label for="Comments-Yes">
                    Yes
                </label>
            </div>

            <div class="multiple-choice">
                @Html.RadioButtonFor(m => m.HasComments, false, new { id = "Comments-No" })
                <label for="Comments-No">
                    No
                </label>
            </div>
        </div>

        <div class="form-group @Html.Gds().FormGroupClass(m => m.StatsMarking)" id="dvCommentSelectReasons" style="display:none">
            @Html.LabelFor(m => m.StatsMarking, new { @class = "form-label-bold" })
            @Html.Gds().ValidationMessageFor(m => m.StatsMarking)
            @Html.Gds().DropDownListFor(m => m.StatsMarking, Model.StatsMarkingSelectList, string.Empty)
        </div>

        <div class="form-group @Html.Gds().FormGroupClass(m => m.Comments)" id="dvComments" style="display:none">
            @Html.LabelFor(m => m.Comments, new { @class = "form-label-bold" })
            @Html.Gds().ValidationMessageFor(m => m.Comments)
            @Html.TextAreaFor(m => m.Comments, new { @class = "form-control-wide", rows = 10 })
        </div>

    }

</div>
