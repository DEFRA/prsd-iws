@using EA.Iws.Core.FinancialGuarantee
@using EA.Iws.Core.Movement
@using EA.Iws.Core.NotificationAssessment
@using EA.Iws.Core.Shared
@using EA.Iws.Web.Infrastructure.Paging
@using EnumHelper = EA.Prsd.Core.Helpers.EnumHelper

@model EA.Iws.Web.Areas.AdminExportNotificationMovements.ViewModels.Home.MovementSummaryViewModel
@using Resources = EA.Iws.Web.Areas.AdminExportNotificationMovements.Views.Home.IndexResources

@{
    ViewBag.Title = Resources.Title;

    var operationTitle = Model.NotificationType == NotificationType.Disposal ? @Resources.Disposed : @Resources.Recovered;
}

@helper DisplayDate(DateTime? date, MovementStatus status)
{
    if (date.HasValue && status != MovementStatus.Cancelled)
    {
        @date.Value.ToString("d MMM yyyy")
    }
    else if (status != MovementStatus.Cancelled)
    {
        @:- -
    }
}

@helper DisplayQuantity(decimal? quantity, ShipmentQuantityUnits? unit, MovementStatus status)
{
    if (quantity.HasValue && status != MovementStatus.New && status != MovementStatus.Cancelled)
    {
        @(quantity.Value.ToString("G29") + " " + EnumHelper.GetShortName(unit.GetValueOrDefault()))
    }
    else if (status != MovementStatus.Cancelled)
    {
        @:- -
    }
}

<div class="shipping-home">

    <h1 class="heading-large">
        @Resources.MainHeading
    </h1>

    <div class="grid-row">
        <div class="column-half">
            <table class="odd-table">
                <caption class="visuallyhidden">@Resources.MainHeading</caption>
                <tbody>
                <tr>
                    <td>@Resources.SummaryTitleIntended</td>
                    <td>@Model.IntendedShipments</td>
                </tr>
                <tr>
                    <td>@Resources.SummaryTitleNumber</td>
                    <td>@Model.UsedShipments</td>
                </tr>
                <tr>
                    <td>@Resources.SummaryTitleActive</td>
                    <td>@Model.ActiveLoadsPermitted</td>
                </tr>
                <tr>
                    <td>@Resources.SummaryTitleCurrent</td>
                    <td>@Model.ActiveLoadsCurrent</td>
                </tr>
                <tr>
                    <td>@Resources.SummaryTitleReceived</td>
                    <td>@Model.QuantityReceivedTotal</td>
                </tr>
                <tr>
                    <td>@Resources.SummaryTitleRemaining</td>
                    <td>@Model.QuantityRemainingTotal</td>
                </tr>
                </tbody>
            </table>
        </div>

        <div class="column-half">
            <div class="nav-bloc">
                <h2 class="heading-small">@Resources.OptionsHeading</h2>
                <nav>
                    @if (Model.NotificationStatus == NotificationStatus.Consented)
                    {
                        @Html.ActionLink(Resources.OptionsCancel, "Index", "Cancel")
                    }
                    @if (Model.CanDeleteMovement)
                    {
                        @Html.ActionLink(Resources.OptionsDelete, "Index", "Delete")
                    }
                    @Html.ActionLink(Resources.OptionsViewRejected, "List", "RejectedMovement")
					@Html.ActionLink(Resources.ShipmentAuditLink, "Index", "ShipmentAudit")
                    @Html.ActionLink(Resources.OptionsOverview, "Index", "Home", new { area = "AdminExportAssessment", id = Model.NotificationId }, null)
                </nav>
            </div>

            @if (Model.NotificationStatus == NotificationStatus.Consented && Model.FgStatus == FinancialGuaranteeStatus.Approved)
            {
                <div class="form-group">
                    <h2 class="heading-small">@Resources.OptionsRecord</h2>
                    @using (Html.BeginForm("Search", "Home"))
                    {
                        @Html.AntiForgeryToken()
                        <input id="ShipmentNumber" name="ShipmentNumber" type="number" min="1" class="form-control" placeholder="@Resources.SearchPlaceholder"/>
                        <button class="button">@Resources.SearchButton</button>
                    }
                </div>
            }
        </div>
    </div>

    <section class="ship-data">
        <h3 class="heading-small">
            @Resources.DetailsHeading
        </h3>

        <div class="grid-row">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="column-two-thirds">
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.SelectedMovementStatus, Model.MovementStatuses, new { @class = "form-control view-by" })
                        <button id="updateStatus" class="button" type="submit">@Resources.Update</button>
                    </div>
                </div>
                <div class="column-one-third">
                    @Html.ActionLink(Resources.DownloadExcel, "Index", "Download")
                </div>
            }
        </div>

        <div class="form-group">
            <table class="odd-table">
                <caption class="visuallyhidden">@Resources.SummaryTableHeading</caption>
                <thead>
                <tr>
                    <th>@Resources.SummaryTableNumber</th>
                    <th>@Resources.SummaryTableStatus</th>
                    <th>@Resources.SummaryTablePrenotified</th>
                    <th>@Resources.SummaryTableDue</th>
                    <th>@Resources.SummaryTableReceived</th>
                    <th>@Resources.SummaryTableQuantity</th>
                    <th>@operationTitle</th>
                </tr>
                </thead>

                <tbody>
                @{
					for (int i = 0; i < Model.TableData.Count; i++)
					{
						var statusText = Model.TableData[i].Status == MovementStatus.Completed ? operationTitle : EnumHelper.GetDisplayName(Model.TableData[i].Status);
						if (Model.TableData[i].IsShipped() || Model.TableData[i].IsShipmentActive())
						{
							statusText = statusText + Resources.Shipped;
						}

                        <tr>
                            <td>@Html.ActionLink(Model.TableData[i].Number.ToString(), 
                                    actionName: "Edit", 
                                    controllerName: "CaptureMovement", 
                                    routeValues: new { movementId = Model.TableData[i].Id }, 
                                    htmlAttributes: null)
                            </td>
                            <td>@statusText</td>
                            <td>
                                @DisplayDate(Model.TableData[i].PreNotification, Model.TableData[i].Status)
                            </td>
                            <td>
                                @DisplayDate(Model.TableData[i].ShipmentDate, Model.TableData[i].Status)
                            </td>
                            <td>
                                @DisplayDate(Model.TableData[i].Received, Model.TableData[i].Status)
                            </td>
                            <td>
                                @DisplayQuantity(Model.TableData[i].Quantity, Model.TableData[i].Unit, Model.TableData[i].Status)
                            </td>
                            <td>
                                @DisplayDate(Model.TableData[i].RecoveredOrDisposedOf, Model.TableData[i].Status)
                            </td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        </div>

        @Html.Pager(Model.PageSize, Model.PageNumber, Model.NumberofShipments).Options(o =>
        {
            if (Model.SelectedMovementStatus.HasValue)
            {
                o.AddRouteValue("status", (int)Model.SelectedMovementStatus.Value);
            }
        })
    </section>
    <div class="form-group">
        @Html.ActionLink(Resources.GoToButtonText,
            "Index",
            "Home",
            new { area = "AdminExportAssessment", id = Model.NotificationId },
            new { @class = "button" })
    </div>
</div>

@section scripts {
    <script>
        $(function() {
            $("#updateStatus").hide();
            $("#@Html.NameFor(m => m.SelectedMovementStatus)").change(function() {
                $("#updateStatus").parents("form").submit();
            });
        });
    </script>
}