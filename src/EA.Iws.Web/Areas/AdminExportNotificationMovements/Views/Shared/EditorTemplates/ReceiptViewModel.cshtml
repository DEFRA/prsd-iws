@model EA.Iws.Web.Areas.AdminExportNotificationMovements.ViewModels.CaptureMovement.ReceiptViewModel
@using Resource = EA.Iws.Web.Areas.AdminExportNotificationMovements.Views.Shared.EditorTemplates.ReceiptResources

<div>

    <div class="form-group @Html.Gds().FormGroupClass(m => m.ReceivedDate)">
        @Html.LabelFor(m => m.ReceivedDate, new { @class = "form-label-bold" })
        @Html.Gds().ValidationMessageFor(m => m.ReceivedDate)
        @Html.EditorFor(m => m.ReceivedDate)
    </div>

    <div class="form-group">
        @*@Html.LabelFor(m => m.WasShipmentAccepted, new { @class = "form-label-bold" })
        @Html.Gds().ValidationMessageFor(m => m.WasShipmentAccepted)*@

        <div class="multiple-choice">
            @Html.RadioButtonFor(m => m.ShipmentTypes, ShipmentType.Accepted, new { id = "Accepted", @checked = true })
            <label for="Accepted">
                Yes
            </label>
        </div>

        <div class="multiple-choice">
            @Html.RadioButtonFor(m => m.ShipmentTypes, ShipmentType.Partially, new { id = "Partially" })
            <label for="Partially">
                Partially
            </label>
        </div>

        <div class="multiple-choice">
            @Html.RadioButtonFor(m => m.ShipmentTypes, ShipmentType.Rejected, new { id = "Rejected" })
            <label for="Rejected">
                No
            </label>
        </div>

        @if (Model.ShipmentTypes == ShipmentType.Partially || Model.ShipmentTypes == ShipmentType.Rejected)
        {
            <div class="panel" id="dvPartiallyRejectedComments" style="display:block">
                @if (Model.ShipmentTypes == ShipmentType.Partially)
                {
                    <div id="dvPartiallyRejected" style="display:block">
                        @Html.LabelFor(m => m.RejectionReason, new { @class = "form-label-bold" })
                        @Html.LabelFor(m => m.PartiallyRejectionReasonInfomation1, new { @class = "form-label" })
                        <br />
                        @Html.LabelFor(m => m.PartiallyRejectionReasonInfomation2, new { @class = "form-label" })
                    </div>

                    <div id="dvRejected" style="display:none">
                        @Html.LabelFor(m => m.RejectionReason, new { @class = "form-label-bold" })
                        @Html.LabelFor(m => m.FullyRejectionReasonInfomation1, new { @class = "form-label" })
                        <br />
                        @Html.LabelFor(m => m.FullyRejectionReasonInfomation2, new { @class = "form-label" })
                    </div>
                }
                else
                {
                    <div id="dvRejected" style="display:block">
                        @Html.LabelFor(m => m.RejectionReason, new { @class = "form-label-bold" })
                        @Html.LabelFor(m => m.FullyRejectionReasonInfomation1, new { @class = "form-label" })
                        <br />
                        @Html.LabelFor(m => m.FullyRejectionReasonInfomation2, new { @class = "form-label" })
                    </div>

                    <div id="dvPartiallyRejected" style="display:none">
                        @Html.LabelFor(m => m.RejectionReason, new { @class = "form-label-bold" })
                        @Html.LabelFor(m => m.PartiallyRejectionReasonInfomation1, new { @class = "form-label" })
                        <br />
                        @Html.LabelFor(m => m.PartiallyRejectionReasonInfomation2, new { @class = "form-label" })
                    </div>
                }
                @Html.Gds().ValidationMessageFor(m => m.RejectionReason)
                @Html.TextAreaFor(m => m.RejectionReason, new { @class = "form-control-wide", rows = 10 })
            </div>
        }
        else
        {
            <div class="panel" id="dvPartiallyRejectedComments" style="display:none">
                <div id="dvPartiallyRejected">
                    @Html.LabelFor(m => m.RejectionReason, new { @class = "form-label-bold" })
                    @Html.LabelFor(m => m.PartiallyRejectionReasonInfomation1, new { @class = "form-label" })
                    <br />
                    @Html.LabelFor(m => m.PartiallyRejectionReasonInfomation2, new { @class = "form-label" })
                </div>

                <div id="dvRejected">
                    @Html.LabelFor(m => m.RejectionReason, new { @class = "form-label-bold" })
                    @Html.LabelFor(m => m.FullyRejectionReasonInfomation1, new { @class = "form-label" })
                    <br />
                    @Html.LabelFor(m => m.FullyRejectionReasonInfomation2, new { @class = "form-label" })
                </div>

                @Html.Gds().ValidationMessageFor(m => m.RejectionReason)
                @Html.TextAreaFor(m => m.RejectionReason, new { @class = "form-control-wide", rows = 10 })
            </div>
        }
    </div>

    @if (Model.ShipmentTypes == ShipmentType.Partially)
    {
        <div class="form-group" id="dvRejectedQuantity" style="display:block">
            @Html.LabelFor(m => m.ShipmentRejectedQuantity, new { @class = "form-label-bold" })
            @Html.Gds().ValidationMessageFor(m => m.ShipmentRejectedQuantity)
            <p>
                @Html.LabelFor(m => m.RejectedQuantityInfo, new { @class = "form-label" })
            </p>

            @Html.LabelFor(m => m.RejectedQuantity, new { @class = "form-label" })
            @Html.Gds().ValidationMessageFor(m => m.RejectedQuantity)
            @Html.Gds().ValidationMessageFor(m => m.RejectedUnits)

            <div class="grid-row">
                <div class="column-third">
                    @Html.Gds().TextBoxFor(m => m.RejectedQuantity, new { type = "number", min = 0, step = "any", @class = "form-control form-control-wide" })
                </div>
                <div class="column-third">
                    @Html.Gds().DropDownListFor(m => m.RejectedUnits, Model.UnitSelectList, new { @class = "form-control form-control-wide" })
                    @for (int i = 0; i < Model.PossibleUnits.Count; i++)
                    {
                        @Html.HiddenFor(m => m.PossibleUnits[i])
                    }
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="form-group" id="dvRejectedQuantity" style="display:none">
            @Html.LabelFor(m => m.ShipmentRejectedQuantity, new { @class = "form-label-bold" })
            @Html.Gds().ValidationMessageFor(m => m.ShipmentRejectedQuantity)
            <p>
                @Html.LabelFor(m => m.RejectedQuantityInfo, new { @class = "form-label" })
            </p>

            @Html.LabelFor(m => m.RejectedQuantity, new { @class = "form-label" })
            @Html.Gds().ValidationMessageFor(m => m.RejectedQuantity)
            @Html.Gds().ValidationMessageFor(m => m.RejectedUnits)

            <div class="grid-row">
                <div class="column-third">
                    @Html.Gds().TextBoxFor(m => m.RejectedQuantity, new { type = "number", min = 0, step = "any", @class = "form-control form-control-wide" })
                </div>
                <div class="column-third">
                    @Html.Gds().DropDownListFor(m => m.RejectedUnits, Model.UnitSelectList, new { @class = "form-control form-control-wide" })
                    @for (int i = 0; i < Model.PossibleUnits.Count; i++)
                    {
                        @Html.HiddenFor(m => m.PossibleUnits[i])
                    }
                </div>
            </div>
        </div>
    }

    <div class="form-group @Html.Gds().FormGroupClass(m => m.ActualQuantity) @Html.Gds().FormGroupClass(m => m.ActualUnits)" id="dvActualQuantity">
        <h3 class="heading-small" style="margin-top: 0">@Resource.ActualQuantityQuestion</h3>
        <p>@Resource.ActualQuantityHint</p>
        @Html.LabelFor(m => m.ActualQuantity, new { @class = "form-label" })
        @Html.Gds().ValidationMessageFor(m => m.ActualQuantity)
        @Html.Gds().ValidationMessageFor(m => m.ActualUnits)
        <div class="grid-row">
            <div class="column-third">
                @Html.Gds().TextBoxFor(m => m.ActualQuantity, new { type = "number", min = 0, step = "any", @class = "form-control form-control-wide" })
            </div>
            <div class="column-third">
                @Html.Gds().DropDownListFor(m => m.ActualUnits, Model.UnitSelectList, new { @class = "form-control form-control-wide" })
                @for (int i = 0; i < Model.PossibleUnits.Count; i++)
                {
                    @Html.HiddenFor(m => m.PossibleUnits[i])
                }
            </div>
        </div>
    </div>

</div>

