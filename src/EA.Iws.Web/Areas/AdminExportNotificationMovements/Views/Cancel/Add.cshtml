@using Resources = EA.Iws.Web.Areas.AdminExportNotificationMovements.Views.Cancel.CancelResources;
@model EA.Iws.Web.Areas.AdminExportNotificationMovements.ViewModels.Cancel.AddViewModel

@{
    ViewBag.Title = Resources.AddTitle;
}

<div class="grid-row container">
    <div class="stickem-row stickem-container">
        <div class="column-two-thirds">
            <header class="hgroup">
                <h1 class="heading-large">@Resources.AddTitle</h1>
                @Resources.AddDescription
            </header>

            @using (Html.BeginForm())
            {
                @Html.Gds().ValidationSummary()
                @Html.AntiForgeryToken()

                <table id="NewMovement" title="Add shipments to cancel">
                    <thead>
                        <tr>
                            <th style="width: 5%">
                                @Resources.ShipmentNumber
                            </th>
                            <th style="width: 15%">
                                @Resources.ActualDateOfShipment
                            </th>
                            <th style="border-bottom: none !important; width: 5%"></th>
                            <th style="border-bottom: none !important; width: 10%">
                                <label class="visuallyhidden">Add</label>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td style="border-bottom: none !important">
                                <div class="form-group @Html.Gds().FormGroupClass(m => m.NewShipmentNumber)">
                                    @Html.Gds().ValidationMessageFor(m => m.NewShipmentNumber)
                                    @Html.Gds().TextBoxFor(m => m.NewShipmentNumber)
                                </div>
                            </td>
                            <td style="border-bottom: none !important">
                                <div class="form-group @Html.Gds().FormGroupClass(m => m.NewActualShipmentDate)">
                                    @Html.Gds().ValidationMessageFor(m => m.NewActualShipmentDate)
                                    @Html.Gds().TextBoxFor(m => m.NewActualShipmentDate, new { data_datable = "ddmmyy", @style = "width: 65%;" })
                                </div>
                            </td>
                            <td style="border-bottom: none !important"></td>
                            <td style="border-bottom: none !important">
                                <div class="form-group">
                                    <button type="submit" name="command" value="add" tabindex="2" class="button-secondary">@Resources.AddShipmentButton</button>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>

                if (Model.AddedMovements.Any())
                {
                    <div class="form-group @Html.Gds().FormGroupClass(m => m.AddedMovements)">
                        <table id="AddedMovements" title="Add shipments to cancel">
                            <thead>
                                <tr>
                                    <th>
                                        @Resources.ShipmentNumber
                                    </th>
                                    <th>
                                        @Resources.ActualDateOfShipment
                                    </th>
                                    <th>
                                        <label>@Constants.ActionText</label>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (var i = 0; i < Model.AddedMovements.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(m => m.AddedMovements[i].Number)
                                        </td>
                                        <td>
                                            @Html.Gds().DisplayShortDateFor(m => m.AddedMovements[i].ShipmentDate)
                                        </td>
                                        <td>
                                            <button class="link-submit" type="submit" name="command" value="@Model.AddedMovements[i].Number">@Constants.RemoveText</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            }
            <div class="form-group">
                @Html.ActionLink(@Constants.ContinueOnlyButtonText, "Index", "Cancel", null, new { @class = "button" })
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            $("#NewShipmentNumber").focus();
        });
    </script>
}
