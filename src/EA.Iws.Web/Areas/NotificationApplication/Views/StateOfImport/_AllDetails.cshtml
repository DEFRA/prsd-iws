@model EA.Iws.Web.Areas.NotificationApplication.ViewModels.StateOfImport.StateOfImportViewModel

<div class="form-group @Html.Gds().FormGroupClass(m => m.CountryId)">
    @Html.Gds().LabelFor(m => m.CountryId, new { @class = "form-label-bold" })
    @Html.Gds().HintParagraph("This is the country or state where the waste ends its journey")
    @Html.HiddenFor(m => m.CountryId)
    @Html.Gds().DropDownListFor(m => m.CountryId, Model.Countries, new { id = "country-list", disabled = "true" })
    <button class="link-submit force-newline" type="submit" value="changeCountry" name="submit">Change country</button>
</div>

<div class="form-group @Html.Gds().FormGroupClass(m => m.CompetentAuthorities.Selected)">
    @Html.Gds().LabelFor(m => m.CompetentAuthorities, new { @class = "form-label-bold" })
    @Html.Gds().HintParagraph("Select the competent authority for the region of import")
    @Html.Gds().ValidationMessageFor(m => m.CompetentAuthorities.SelectedValue)
    @Html.EditorFor(m => m.CompetentAuthorities)
</div>

<div class="form-group @Html.Gds().FormGroupClass(m => m.EntryOrExitPointId)">
    @Html.Gds().LabelFor(m => m.EntryOrExitPointId, new { @class = "form-label-bold" })
    @Html.Gds().HintParagraph("Enter the specific port or border crossing the waste will enter the country from")
    @Html.ValidationMessageFor(m => m.EntryOrExitPointId)
    @Html.Gds().DropDownListFor(m => m.EntryOrExitPointId, Model.EntryPoints, string.Empty)
</div>

<div class="form-group">
    <button class="button" type="submit" value="submit" name="submit">@EA.Iws.Web.Infrastructure.Constants.ContinueButtonText</button>
</div>