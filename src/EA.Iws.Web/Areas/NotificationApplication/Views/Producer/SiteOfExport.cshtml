@using EA.Iws.Web.Areas.NotificationApplication.Views.Producer
@model EA.Iws.Web.Areas.NotificationApplication.ViewModels.Producer.SiteOfExportViewModel
@{
    ViewBag.Title = SiteOfExportResources.Title;
}

<h1 class="govuk-heading-l">@SiteOfExportResources.Header</h1>

@if (Model.Producers.Any())
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.Gds().ValidationSummary()
        @Html.HiddenFor(m => m.NotificationId)

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.SelectedSiteOfExport)">
            <table title=@SiteOfExportResources.TableTitle class="govuk-table">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header">@SiteOfExportResources.ThOrganisationName</th>
                        <th scope="col" class="govuk-table__header">@SiteOfExportResources.ThAddress</th>
                        <th scope="col" class="govuk-table__header">@SiteOfExportResources.ThSiteOfExport</th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    @for (var i = 0; i < Model.Producers.Count; i++)
                    {
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">
                                @Html.DisplayFor(m => m.Producers[i].Business.Name)
                            </td>
                            <td class="govuk-table__cell">
                                @Html.DisplayFor(m => m.Producers[i].Address.StreetOrSuburb),
                                @Html.DisplayFor(m => m.Producers[i].Address.TownOrCity)
                            </td>
                            <td class="govuk-table__cell">
                                @{
                                    var htmlAttr = new Dictionary<string, object> { { "id", Html.NameFor(m => m.Producers[i].Id) } };
                                    htmlAttr.Add("title", @Model.Producers[i].Business.Name);
                                    htmlAttr.Add("class", "tableRadio");

                                    if (@Model.Producers[i].IsSiteOfExport)
                                    {
                                        htmlAttr.Add("checked", "checked");
                                    }
                                    @Html.RadioButtonFor(m => m.SelectedSiteOfExport, Model.Producers[i].Id, htmlAttr)
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <button class="govuk-button" type="submit">@Constants.ContinueButtonText</button>
    }
}
else
{
    ViewBag.Title = SiteOfExportResources.TitleAddFirst;
    <p>@SiteOfExportResources.NoProducers</p>
    <p>@Html.ActionLink(SiteOfExportResources.BackToProducers, "List", "Producer", new { id = Model.NotificationId, backToOverview = ViewBag.BackToOverview }, null)</p>
    if (ViewBag.BackToOverview)
    {
        @Html.ActionLink(Constants.ContinueButtonText, "Index", "Home", new { id = Model.NotificationId }, new { @class = "govuk-button" })
    }
    else
    {
        @Html.ActionLink(Constants.ContinueButtonText, "Index", "Importer", new { id = Model.NotificationId }, new { @class = "govuk-button" })
    }
}