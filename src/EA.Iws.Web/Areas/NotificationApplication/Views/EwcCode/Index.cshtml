@using EA.Iws.Web.Areas.NotificationApplication.Views.EwcCode
@model EA.Iws.Web.Areas.NotificationApplication.ViewModels.EwcCode.EwcCodeViewModel

@{
    ViewBag.Title = EwcCodeResources.Title;
}

<div class="grid-row">
    <header class="hgroup">
        <h1 class="govuk-heading-l">@EwcCodeResources.Header</h1>
    </header>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.Gds().ValidationSummary()

        <div class="wastecode-block">

            <div class="form-group-compound @Html.Gds().FormGroupClass(m => m.EnterWasteCodesViewModel.SelectedCode)">
                @Html.Gds().LabelFor(m => m.EnterWasteCodesViewModel.SelectedCode, false)
                @Html.Gds().ValidationMessageFor(m => m.EnterWasteCodesViewModel.SelectedCode)
                @Html.Gds().DropDownListFor(m => m.EnterWasteCodesViewModel.SelectedCode, Model.EnterWasteCodesViewModel.Codes,
                    string.Empty, new { title = EwcCodeResources.Title, tabindex=1 })
                <button type="submit" name="command" value="addcode" tabindex="2" class="govuk-button">@EwcCodeResources.AddCode</button>
            </div>

            <table class="govuk-table" title="Ewc codes">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header">@EwcCodeResources.Code</th>
                        <th scope="col" class="govuk-table__header">@EwcCodeResources.Description</th>
                        <th scope="col" class="govuk-table__header"></th>
                        <th scope="col" class="govuk-table__header">Action</th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    @if (Model.EnterWasteCodesViewModel.SelectedWasteCodes.Count < 1)
                    {
                        <tr class="govuk-table__row">
                            <td colspan="4">@EwcCodeResources.AwaitingCode</td>
                        </tr>
                    }
                    @for (int i = 0; i < Model.EnterWasteCodesViewModel.SelectedWasteCodes.Count; i++)
                    {
                        var thisCode = Model.EnterWasteCodesViewModel.WasteCodes.Single(wc => wc.Id == Model.EnterWasteCodesViewModel.SelectedWasteCodes[i]);
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">@Html.HiddenFor(m => m.EnterWasteCodesViewModel.SelectedWasteCodes[i]) @Html.Raw(thisCode.Name)</td>
                            <td class="govuk-table__cell">@Html.Raw(thisCode.Description)</td>
                            <td class="govuk-table__cell"><input name="EnterWasteCodesViewModel.SelectedCodesList[@i].Id" type="hidden" value="@Model.EnterWasteCodesViewModel.SelectedWasteCodes[i]" /></td>
                            <td class="govuk-table__cell"><button class="link-submit govuk-link" type="submit" name="remove" value="@Model.EnterWasteCodesViewModel.SelectedWasteCodes[i]" title="@Html.Raw(thisCode.Name)">@EwcCodeResources.Remove</button></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="govuk-form-group">
            <button class="govuk-button" type="submit" name="command" value="continue">@Constants.ContinueButtonText</button>
        </div>
    }

</div>