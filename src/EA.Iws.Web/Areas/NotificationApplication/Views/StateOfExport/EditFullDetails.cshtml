@model EA.Iws.Web.Areas.NotificationApplication.ViewModels.StateOfExport.EditStateOfExportViewModel

@Html.HiddenFor(m => m.ShowNextSection)
<div class="form-group @Html.Gds().FormGroupClass(m => m.CountryId)">
    @Html.Gds().LabelFor(m => m.CountryId, new { @class = "form-label-bold" })
    @Html.Gds().HintParagraph("This is the country or state where the waste begins its journey")
    @Html.HiddenFor(m => m.CountryId)
    @Html.Gds().DropDownListFor(m => m.CountryId, Model.Countries, new { id = "country-list", disabled = "true" })
</div>

<div class="form-group">
    @Html.ActionLink("Change country", "Edit", "StateOfExport", new { id = Model.NotificationId, edit = "country" }, null)
</div>

<div class="form-group @Html.Gds().FormGroupClass(m => m.CompetentAuthorities.Selected)">
    @Html.Gds().LabelFor(m => m.CompetentAuthorities, new { @class = "form-label-bold" })
    @Html.Gds().HintParagraph("This the competent authority for the region of export")
    @Html.Gds().ValidationMessageFor(m => m.CompetentAuthorities.SelectedValue)
    @Html.EditorFor(m => m.CompetentAuthorities)
</div>

<div class="form-group @Html.Gds().FormGroupClass(m => m.ExitPointId)">
    @Html.Gds().LabelFor(m => m.ExitPointId, new { @class = "form-label-bold" })
    @Html.Gds().HintParagraph("This is the specific port or border crossing that your waste will leave from")
    @Html.ValidationMessageFor(m => m.ExitPointId)
    @Html.Gds().DropDownListFor(m => m.ExitPointId, Model.ExitPoints)
</div>

<div class="form-group">
    <button class="button" type="submit" value="submit" name="submit">Continue</button>
</div>