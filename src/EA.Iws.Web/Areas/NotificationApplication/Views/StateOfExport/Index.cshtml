@using EA.Iws.Web.Areas.NotificationApplication.Views.StateOfExport
@model EA.Iws.Web.Areas.NotificationApplication.ViewModels.StateOfExport.StateOfExportViewModel
@{
    ViewBag.Title = StateOfExportResources.Title;
}
<h1 class="heading-large">@StateOfExportResources.Header</h1>

@using (Html.BeginForm())
{
    @Html.Gds().ValidationSummary()
    @Html.AntiForgeryToken()

    <div class="govuk-form-group">
        <h2 class="govuk-heading-m" >@StateOfExportResources.CAName</h2>
        @Model.CompetentAuthorityName
    </div>

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.EntryOrExitPointId)">
        @Html.Gds().LabelFor(m => m.EntryOrExitPointId, new { @class = "form-label-bold" })
        @Html.Gds().HintParagraph(StateOfExportResources.Hint)
        @Html.Gds().ValidationMessageFor(m => m.EntryOrExitPointId)
        @Html.Gds().DropDownListFor(m => m.EntryOrExitPointId, Model.ExitPoints, string.Empty, new { @title = StateOfExportResources.ExitPoint, data_select_box = "true" })
        @Html.HiddenFor(m => m.NotificationCompetentAuthority)
    </div>

    @Html.Partial("_PortNotListedDisclosure", new ViewDataDictionary { { "ca", Model.NotificationCompetentAuthority } })

    <div class="govuk-form-group">
        <button class="govuk-button" type="submit" value="submit" name="submit">@Constants.ContinueButtonText</button>
    </div>

    @Html.HiddenFor(m => m.CompetentAuthorityName)
    @Html.HiddenFor(m => m.CountryId)

    for (int i = 0; i < Model.TransitStateCountryIds.Count; i++)
    {
        @Html.HiddenFor(m => m.TransitStateCountryIds[i])
    }
    if (Model.StateOfImportCountryId.HasValue)
    {
        @Html.HiddenFor(m => m.StateOfImportCountryId)
    }
}