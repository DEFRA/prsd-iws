@using EA.Iws.Core.PackagingType
@using EA.Iws.Web.Areas.NotificationApplication.Views.PackagingTypes

@model EA.Iws.Web.Areas.NotificationApplication.ViewModels.PackagingTypes.PackagingTypesViewModel

@{
    ViewBag.Title = PackagingTypesResources.Title;
}

<h1 class="heading-large">@PackagingTypesResources.Header</h1>

<p>@PackagingTypesResources.HeaderDescription</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Gds().ValidationSummary()
    @Html.HiddenFor(m => m.NotificationId)

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.PackagingTypes)">
        @Html.Gds().ValidationMessageFor(m => m.PackagingTypes)
        <fieldset class="govuk-fieldset">
            <legend class="visuallyhidden">@PackagingTypesResources.HeaderDescription</legend>
            <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                @for (int i = 0; i < Model.PackagingTypes.PossibleValues.Count; i++)
                {
                    MvcHtmlString idForThisCheckBox = Html.NameFor(m => m.PackagingTypes.PossibleValues[i]);

                    <div class="multiple-choice govuk-checkboxes__item">
                        @Html.CheckBoxFor(m => m.PackagingTypes.PossibleValues[i].Selected, new { id = idForThisCheckBox, @class = "govuk-checkboxes__input" })
                        <label class="govuk-label govuk-checkboxes__label" for="@idForThisCheckBox">
                            @if (Model.PackagingTypes.ShowEnumValue)
                            {
                                @Html.DisplayFor(m => m.PackagingTypes.PossibleValues[i].Value)
                                @Html.Raw(" - ")
                            }
                            @Html.DisplayFor(m => m.PackagingTypes.PossibleValues[i].Text)
                        </label>
                    </div>

                    @Html.HiddenFor(m => m.PackagingTypes.PossibleValues[i].Text)
                    @Html.HiddenFor(m => m.PackagingTypes.PossibleValues[i].Value)
                }

                <div class="multiple-choice govuk-checkboxes__item" data-target="other-option">
                    @Html.CheckBoxFor(m => m.OtherSelected, new { id = "other-option-check", @class = "govuk-checkboxes__input" })
                    <label class="govuk-label govuk-checkboxes__label" for="other-option-check">
                        @((int)PackagingType.Other) - @PackagingTypesResources.Other
                    </label>
                </div>

                <div class="panel @(Model.OtherSelected ? "" : "js-hidden")" id="other-option">
                    <label class="form-label" for="other-label">@PackagingTypesResources.Other</label>
                    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.OtherDescription)">
                        @Html.Gds().ValidationMessageFor(m => m.OtherDescription)
                        @Html.Gds().TextBoxFor(m => m.OtherDescription, new { @id = "other-label" })
                    </div>
                </div>
            </div>
        </fieldset>

    </div>

    <div class="govuk-form-group">
        <button class="govuk-button" type="submit">@Constants.ContinueButtonText</button>
    </div>
}