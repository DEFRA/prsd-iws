@using EA.Iws.Core.WasteType
@using EnumHelper = EA.Prsd.Core.Helpers.EnumHelper
@model EA.Iws.Web.Areas.NotificationApplication.ViewModels.ChemicalComposition.ChemicalCompositionViewModel
@{
    ViewBag.Title = "Waste Code";
}
<header class="hgroup">
    <div class="form-group">
        @Html.Gds().HintParagraph("Step 2 of 3")
    </div>
    <h1 class="heading-large">What is the chemical composition of the waste?</h1>
    <p>
        Tell us about the concentration levels in the waste's constituent parts. You can enter "NA" where it's not applicable.
    </p>
</header>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Gds().ValidationSummary()
    @Html.HiddenFor(m => m.NotificationId)
    @Html.HiddenFor(m => m.ChemicalCompositionType)

    <div>Brief description of the type of wood</div>
    <div class="form-group @Html.Gds().FormGroupClass(m => m.Description)">
        @Html.Gds().ValidationMessageFor(m => m.Description)
        @Html.Gds().HintSpan("Limit your answer to 70 characters or less")
        @Html.Gds().TextBoxFor(m => m.Description, new { @MaxLength = 70, @title = "Wood waste type description" })
    </div>

    <div class="grid-row">
        <div class="column-half">
            @for (var i = 0; i < Model.WasteComposition.Count; i++)
            {
                var hintText = "Enter the minimum and maximum as a weight-by-weight percentage.";

                if (Model.WasteComposition[i].WasteInformationType == WasteInformationType.NetCalorificValue)
                {
                    hintText = "Megajoules per kilogram";
                }

                if (Model.WasteComposition[i].WasteInformationType == WasteInformationType.HeavyMetals)
                {
                    hintText = "Milligrams per kilogram";
                }

                <div class="form-group @Html.Gds().FormGroupClass(m => m.WasteComposition[i])">
                    @Html.Gds().ValidationMessageFor(m => m.WasteComposition[i])
                    <div>
                        <div>
                            @EnumHelper.GetDescription(@Model.WasteComposition[i].WasteInformationType)
                            @Html.Gds().HintParagraph(hintText)
                        </div>
                    </div>
                    <div class="grid-row">
                        <div class="column-two-thirds">
                            @EnumHelper.GetDescription(Model.WasteComposition[i].WasteInformationType)
                        </div>
                    </div>
                    <div class="grid-row">
                        @{
                            var placeholderText = (Model.WasteComposition[i].WasteInformationType == WasteInformationType.NetCalorificValue ||
                                                   Model.WasteComposition[i].WasteInformationType == WasteInformationType.HeavyMetals) ? "" : " %";
                            var sectionTitle = @EnumHelper.GetDescription(@Model.WasteComposition[i].WasteInformationType);
                        }
                        <div class="column-half">
                            @Html.Gds().TextBoxFor(m => m.WasteComposition[i].MinConcentration, new { placeholder = "min" + placeholderText, title = sectionTitle + " minimum concentration" })
                            @Html.Gds().TextBoxFor(m => m.WasteComposition[i].WasteInformationType, new { type = "hidden" })
                        </div>
                        <div class="column-half">
                            @Html.Gds().TextBoxFor(m => m.WasteComposition[i].MaxConcentration, new { placeholder = "max" + placeholderText, title = sectionTitle + " maximum concentration" })
                            @Html.Gds().TextBoxFor(m => m.WasteComposition[i].Constituent, new { type = "hidden", @Value = EnumHelper.GetDescription(Model.WasteComposition[i].WasteInformationType) })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    
    <div class="form-group">
        <button class="button" type="submit">@Constants.ContinueButtonText</button>
    </div>
}