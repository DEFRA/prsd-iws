@using EA.Iws.Core.Movement
@using EA.Iws.Core.NotificationAssessment
@using EA.Iws.Core.Shared
@using EA.Iws.Web.Infrastructure.Paging
@using Resource = EA.Iws.Web.Areas.NotificationApplication.Views.Options.IndexResources
@using EnumHelper = EA.Prsd.Core.Helpers.EnumHelper

@model EA.Iws.Web.Areas.NotificationApplication.ViewModels.Options.NotificationOptionsViewModel

@{
    ViewBag.Title = @Resource.TabTitle;
    Layout = "~/Views/Shared/_Layout.GovUK.Sections.cshtml";

    var certificateLinkText = "Record a certificate of " + (Model.NotificationType == NotificationType.Disposal ? "disposal" : "recovery");
    var operationTitle = Model.NotificationType == NotificationType.Disposal ? "Disposed" : "Recovered";
}

@helper DisplayDate(DateTime? date, MovementStatus status)
{
    if (date.HasValue && status != MovementStatus.New && status != MovementStatus.Cancelled)
    {
        @date.Value.ToString("d MMM yyyy")
    }
    else if (status != MovementStatus.Cancelled)
    {
        @:- -
    }
}

@helper DisplayQuantity(decimal? quantity, ShipmentQuantityUnits? unit, MovementStatus status)
{
    if (quantity.HasValue && status != MovementStatus.New && status != MovementStatus.Cancelled)
    {
        @(quantity.Value.ToString("G29") + " " + EnumHelper.GetShortName(unit.GetValueOrDefault()))
    }
    else if (status != MovementStatus.Cancelled)
    {
        @:- -
    }
}

<div class="shipping-home">

    <div class="grid-row">
        <div class="column-two-thirds">
            <h1 class="heading-large">@Resource.Title</h1>

            @if (Model.NotificationStatus == NotificationStatus.NotSubmitted)
            {
                <div class="form-group">@Resource.IncompleteMessage</div>

                @Html.ActionLink(@Resource.ContinueWithButtonText, "Index", "Home", new { id = Model.NotificationId, area = "NotificationApplication" }, new { @class = "button" })
            }
        </div>
    </div>

    @if (Model.NotificationStatus == NotificationStatus.NotSubmitted)
    {
        <hr />
    }
    
    <div class="grid-row">
        <div class="column-half">
            <h2 class="heading-medium">@Resource.CurrentNotificationTitle @Model.NotificationNumber</h2>
            <div class="nav-bloc">
                <nav>
                    @Html.ActionLink(@Resource.ViewNotification, "Index", "Home", new { id = Model.NotificationId, area = "NotificationApplication" }, null)

                    @if (Model.NotificationStatus == NotificationStatus.NotSubmitted)
                    {
                        @Html.ActionLink(@Resource.PrintNotification, "DownloadUnavailable", "Options", new { id = Model.NotificationId, area = "NotificationApplication" }, null)
                        @Html.ActionLink(@Resource.PrintLabel, "PostageLabelUnavailable", "Options", new { id = Model.NotificationId, area = "NotificationApplication" }, null)
                        @Html.ActionLink(@Resource.CompleteFG, "FinancialGuaranteeUnavailable", "Options", new { id = Model.NotificationId, area = "NotificationApplication" }, null)
                        @Html.ActionLink(@Resource.CostInfo, "Payment", "WhatToDoNext", new { id = Model.NotificationId, area = "NotificationApplication" }, null)
                        @Html.ActionLink(@Resource.UploadAnnexes, "AnnexUploadUnavailable", "Options", new { id = Model.NotificationId, area = "NotificationApplication" }, null)
                    }
                    else
                    {
                        @Html.ActionLink(@Resource.PrintNotification, "Print", "WhatToDoNext", new { id = Model.NotificationId, area = "NotificationApplication" }, null)
                        @Html.ActionLink(@Resource.PrintLabel, "PostageLabel", "WhatToDoNext", new { id = Model.NotificationId, area = "NotificationApplication" }, null)
                        @Html.ActionLink(@Resource.CompleteFG, "FinancialGuarantee", "WhatToDoNext", new { id = Model.NotificationId, area = "NotificationApplication" }, null)
                        @Html.ActionLink(@Resource.CostInfo, "Payment", "WhatToDoNext", new { id = Model.NotificationId, area = "NotificationApplication" }, null)
                        @Html.ActionLink(@Resource.UploadAnnexes, "Index", "Annex", new { id = Model.NotificationId, area = "NotificationApplication" }, null)
                    }

                    @Html.ActionLink(@Resource.ViewDates, "Index", "KeyDates", new { id = Model.NotificationId, area = "NotificationApplication" }, null)
                </nav>
            </div>
        </div>

        <div class="column-half">
            <h2 class="heading-medium">@Resource.NewNotificationTitle</h2>
            <div class="nav-bloc">
                <nav>
                    @Html.ActionLink(@Resource.StartNewNotification, "CompetentAuthority", "NewNotification", new { area = string.Empty },
                        new { data_track = "element", data_category = "Export notification", data_action = "Start" })
                    @Html.ActionLink(@Resource.CopyFromPrevious, "CompetentAuthority", "NewNotification", new { cfp = 1, area = string.Empty },
                        new { data_track = "element", data_category = "Export notification", data_action = "Copy" })
                    <a href="https://www.gov.uk/importing-and-exporting-waste"
                       target="_blank"
                       id="supportingInfo-link" 
                       title="@Resource.TitleSupportingInfo"
                       rel="external"
                       data-track="element"
                       data-category="Export notification" 
                       data-action="Supporting information">@Resource.SupportingInfoLink</a>
                    <span class="visuallyhidden">@Resource.SupportingInfoMessage</span>
                </nav>
            </div>
        </div>
    </div>

    <hr />

    <div class="grid-row">

        @if (Model.ShowShipmentOptions)
        {
            <div class="column-half">
                <h2 class="heading-medium">@Resource.ShipmentOptionsTitle</h2>
                <div class="nav-bloc">
                    <nav>
                        @if (Model.ShowFileClosedMessage)
                        {
                            @Resource.FileClosedMessage;
                        }
                        else
                        {
                            @Html.ActionLink(Resource.CreatePrenotification, "Index", "Create", new { notificationId = Model.NotificationId, area = "NotificationMovements" }, null)
                            @Html.ActionLink(Resource.UploadPrenotification, "Index", "UploadChoice", new { notificationId = Model.NotificationId, area = "NotificationMovements" }, null)
                            @Html.ActionLink(Resource.CertificateOfReceipt, "Index", "ReceiveMovement", new { notificationId = Model.NotificationId, area = "NotificationMovements" }, null)
                            @Html.ActionLink(certificateLinkText, "Index", "Complete", new { notificationId = Model.NotificationId, area = "NotificationMovements" }, null)
                            @Html.ActionLink(Resource.CancelPrenotification, "Index", "CancelMovement", new { notificationId = Model.NotificationId, area = "NotificationMovements" }, null)
                            @Html.ActionLink(Resource.EditPrenotification, "Index", "Edit", new { notificationId = Model.NotificationId, area = "NotificationMovements" }, null)
                            @Html.ActionLink(Resource.Reject, "Index", "Reject", new { notificationId = Model.NotificationId, area = "NotificationMovements" }, null)
                            if (Model.ShowGenerateInterimDocumentLink)
                            {
                                @Html.ActionLink(Resource.GenerateInterimDoc, "GenerateInterimMovementDocument", "Home", new { id = Model.NotificationId, area = "NotificationApplication" }, null)
                            }
                            if (Model.ShowDownloadMovementsLink)
                            {
                                @Html.ActionLink(Resource.Download, "Index", "Download", new { notificationId = Model.NotificationId, area = "NotificationMovements" }, null)
                            }
                            @Html.ActionLink(Resource.DownloadShipmentDocuments, "Index", "Documents", new { notificationId = Model.NotificationId, area = "NotificationMovements" }, null)
                        }
                    </nav>
                </div>
            </div>

            <div class="column-half">
                <h2 class="heading-medium">@Resource.ShipmentSummaryTitle</h2>
                <table class="odd-table">
                    <caption class="visuallyhidden">@Resource.SummaryCaption</caption>
                    <tbody>
                        <tr>
                            <td>@Resource.TotalNumber</td>
                            <td>@Model.IntendedShipments</td>
                        </tr>
                        <tr>
                            <td>@Resource.NumberUsed</td>
                            <td>@Model.UsedShipments</td>
                        </tr>
                        <tr>
                            <td>@Resource.ActiveLoadsPermitted</td>
                            <td>@Model.ActiveLoadsPermitted</td>
                        </tr>
                        <tr>
                            <td>@Resource.CurrentActiveLoads</td>
                            <td>@Model.ActiveLoadsCurrent</td>
                        </tr>
                        <tr>
                            <td>@Resource.TotalQuantityReceived</td>
                            <td>@Model.QuantityReceivedTotal</td>
                        </tr>
                        <tr>
                            <td>@Resource.TotalQuantityRemaining</td>
                            <td>@Model.QuantityRemainingTotal</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="column-two-thirds bold-small">
                @Resource.NoShipmentOptionsText
            </div>
        }
    </div>

    @if (Model.ShowShipmentKeyDates)
    {
        <section class="ship-data">
            <h2 class="heading-medium">
                @Resource.TableTitle
            </h2>

            <div class="grid-row">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="column-third">
                        @Resource.Dropdown
                    </div>

                    <div class="column-half">
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.SelectedMovementStatus, Model.MovementStatuses, new { @class = "form-control view-by" })
                            <button id="updateStatus" class="button" type="submit">Update</button>
                        </div>
                    </div>
                }
            </div>

            <div class="form-group">
                <table class="odd-table">
                    <caption class="visuallyhidden">Shipment summary</caption>
                    <thead>
                    <tr>
                        <th>No.</th>
                        <th>Status</th>
                        <th>Prenotified</th>
                        <th>Shipment due</th>
                        <th>Received</th>
                        <th>Quantity</th>
                        <th>@operationTitle</th>
                    </tr>
                    </thead>

                    <tbody>
                    @{
                        for (int i = 0; i < Model.TableData.Count; i++)
                        {
                            var statusText = Model.TableData[i].Status == MovementStatus.Completed ? operationTitle : EnumHelper.GetDisplayName(Model.TableData[i].Status);
                            if (Model.TableData[i].HasShipped)
                            {
                                statusText = statusText + " (Shipped)";
                            }
                            <tr>
                                <td>@Model.TableData[i].Number</td>
                                <td>@statusText</td>
                                <td>
                                    @DisplayDate(Model.TableData[i].PreNotification, Model.TableData[i].Status)
                                </td>
                                <td>
                                    @DisplayDate(Model.TableData[i].ShipmentDate, Model.TableData[i].Status)
                                </td>
                                <td>
                                    @DisplayDate(Model.TableData[i].Received, Model.TableData[i].Status)
                                </td>
                                <td>
                                    @DisplayQuantity(Model.TableData[i].Quantity, Model.TableData[i].Unit, Model.TableData[i].Status)
                                </td>
                                <td>
                                    @DisplayDate(Model.TableData[i].RecoveredOrDisposedOf, Model.TableData[i].Status)
                                </td>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
            </div>

            @Html.Pager(Model.PageSize, Model.PageNumber, Model.NumberofShipments)
        </section>
    }
</div>

@section scripts {
    <script>
        $(function () {
            $("#updateStatus").hide();
            $("#@Html.NameFor(m => m.SelectedMovementStatus)").change(function () {
                $("#updateStatus").parents("form").submit();
            });
        });
    </script>
}