@using EA.Iws.Core.Shared
@using EA.Iws.Web.Infrastructure
@model EA.Iws.Core.Notification.NotificationApplicationCompletionProgress

<p>
    <span class="number">@Model.NotificationNumber</span>
</p>

<p>
    @Html.Navigation().Link("Notification overview", false, "Index", "Home", "NotificationApplication")
</p>

<span>Organisations involved</span>
@Html.Navigation().Link("Exporter - notifier", Model.HasExporter, "Index", "Exporter", "NotificationApplication")
@Html.Navigation().Link("Waste generator - producer", Model.HasProducer, "List", "Producer", "NotificationApplication", additionalActiveActionNames: new[] { "Add", "Edit", "CopyFromExporter", "Remove" })
@Html.Navigation().Link("Site of export", Model.HasSiteOfExport, "SiteOfExport", "Producer", "NotificationApplication")
@Html.Navigation().Link("Importer - consignee", Model.HasImporter, "Index", "Importer", "NotificationApplication")
@Html.Navigation().Link(Model.NotificationType + " facility", Model.HasFacility, "List", "Facility", "NotificationApplication", additionalActiveActionNames: new[] { "Add", "Edit", "CopyFromImporter", "Remove" })
@Html.Navigation().Link("Actual site of " + Model.NotificationType.ToString().ToLowerInvariant(), Model.HasActualSiteOfTreatment, "SiteOfTreatment", "Facility", "NotificationApplication")

<span>@Model.NotificationType operation</span>
@if (Model.NotificationType == NotificationType.Recovery)
{
    @Html.Navigation().Link("Pre-consent facility", Model.HasPreconsentedInformation, "RecoveryPreconsent", "Facility", "NotificationApplication")
}
@Html.Navigation().Link(Model.NotificationType + " codes", Model.HasOperationCodes, "OperationCodes", "WasteOperations", "NotificationApplication", additionalActiveActionNames: new[] { "RecoveryCodes", "DisposalCodes" })
@Html.Navigation().Link("Technology employed", Model.HasTechnologyEmployed, "TechnologyEmployed", "WasteOperations", "NotificationApplication")
@Html.Navigation().Link("Reason for export", Model.HasReasonForExport, "Index", "ReasonForExport", "NotificationApplication")

<span>The transportation</span>
@Html.Navigation().Link("Intended carrier", Model.HasCarrier, "List", "Carrier", "NotificationApplication", additionalActiveActionNames: new[] { "Add", "Edit" })
@Html.Navigation().Link("Means of transport", Model.HasMeansOfTransport, "Index", "MeansOfTransport", "NotificationApplication")
@Html.Navigation().Link("Packaging types", Model.HasPackagingInfo, "Index", "PackagingTypes", "NotificationApplication")
@Html.Navigation().Link("Special handling", Model.HasSpecialHandlingRequirements, "Index", "SpecialHandling", "NotificationApplication")

<span>The journey</span>
@Html.Navigation().Link("Transport route export", Model.HasStateOfExport, "Index", "StateOfExport", "NotificationApplication")
@Html.Navigation().Link("Transport route import", Model.HasStateOfImport, "Index", "StateOfImport", "NotificationApplication")
@Html.Navigation().Link("Transport route transits", Model.HasTransitState, "Summary", "TransportRoute", "NotificationApplication", new []
{
    new Tuple<string, string>("TransitState", "Index") 
})
@Html.Navigation().Link("Customs office", Model.HasCustomsOffice, "Index", "CustomsOffice", "NotificationApplication", new[]
{
    new Tuple<string, string>("CustomsOffice", "NoCustomsOffice"),
    new Tuple<string, string>("ExitCustomsOffice", "Index"),
    new Tuple<string, string>("EntryCustomsOffice", "Index") 
})

<span>Amounts and dates</span>
@Html.Navigation().Link("Intended shipments", Model.HasShipmentInfo, "Index", "Shipment", "NotificationApplication")

<span>Classify your waste</span>
@Html.Navigation().Link("Chemical composition", Model.HasWasteType, "Index", "ChemicalComposition", "NotificationApplication", additionalActiveActionNames: new[] { "OtherWaste", "OtherWasteAdditionalInformation", "RdfSrf", "RdfSrfContinued", "Wood", "WoodContinued" })
@Html.Navigation().Link("Process of generation", Model.HasWasteGenerationProcess, "Index", "WasteGenerationProcess", "NotificationApplication")
@Html.Navigation().Link("Physical characteristics", Model.HasPhysicalCharacteristics, "Index", "PhysicalCharacteristics", "NotificationApplication")

<span>Waste codes</span>
@Html.Navigation().Link("Basel or OECD code", Model.HasBaselOecdCode, "Index", "BaselOecdCode", "NotificationApplication")
@Html.Navigation().Link("EWC codes", Model.HasEwcCodes, "Index", "EwcCode", "NotificationApplication")
@Html.Navigation().Link("Y codes", Model.HasYCodes, "Index", "YCode", "NotificationApplication")
@Html.Navigation().Link("H or HP codes", Model.HasHCodes, "Index", "HCode", "NotificationApplication")
@Html.Navigation().Link("UN classes", Model.HasUnClasses, "Index", "UnClass", "NotificationApplication")
@Html.Navigation().Link("UN numbers", Model.HasUnNumbers, "Index", "UnNumber", "NotificationApplication")
@Html.Navigation().Link("Other codes", Model.HasOtherCodes, "Index", "CustomWasteCode", "NotificationApplication")

@if (Model.NotificationType == NotificationType.Recovery)
{
    <span>Waste recovery</span>
    @Html.Navigation().Link("Recovery information", Model.HasRecoveryData, "Index", "WasteRecovery", "NotificationApplication", additionalActiveActionNames: new[] { "DisposalMethod", "RecoveryValues" })
}
<em></em>