@model EA.Iws.Web.Areas.NotificationApplication.ViewModels.NotificationApplication.JourneyViewModel
@{
    var id = Model.NotificationId;
}

<h2 class="heading-medium">The journey</h2>

<div>
    <details>
        <summary>
            Transport route - export
            @if (Model.IsStateOfExportCompleted)
            {
                <i class="fa fa-check green-text"></i>
            }
            <span class="edit-link-container">@Html.ActionLink("Edit", "Index", "StateOfExport", new { id }, null)</span>
        </summary>
        <div class="expanded-details">
            <div class="panel-indent">
                @if (Model.IsStateOfExportCompleted)
                {
                    <dl>
                        <dt>Country:</dt>
                        <dd>@Html.DisplayFor(m => m.StateOfExportData.Country.Name)</dd>

                        <dt>Competent authority:</dt>
                        <dd>@Html.DisplayFor(m => m.StateOfExportData.CompetentAuthority.Name)</dd>

                        <dt>Exit point:</dt>
                        <dd>@Html.DisplayFor(m => m.StateOfExportData.ExitPoint.Name)</dd>
                    </dl>
                }
                else
                {
                    <p>@ViewBag.SectionIncompleteText</p>
                }
            </div>
        </div>
    </details>

    <details>
        <summary>
            Transport route - transits
            @if (Model.AreTransitStatesCompleted)
            {
                <i class="fa fa-check green-text"></i>
            }
            <span class="edit-link-container">@Html.ActionLink("Edit", "Summary", "TransportRoute", new { id }, null)</span>
        </summary>
        <div class="expanded-details">
            <div class="panel-indent">
                @if (Model.AreTransitStatesCompleted && Model.TransitStates.Any())
                {
                    foreach (var transitState in Model.TransitStates.OrderBy(ts => ts.OrdinalPosition))
                    {
                        <dl>
                            <dt>Country:</dt>
                            <dd>@transitState.Country.Name</dd>

                            <dt>Competent authority:</dt>
                            <dd>@transitState.CompetentAuthority.Name</dd>

                            <dt>Entry point:</dt>
                            <dd>@transitState.EntryPoint.Name</dd>

                            <dt>Exit point:</dt>
                            <dd>@transitState.ExitPoint.Name</dd>
                        </dl>

                        if (transitState != Model.TransitStates.OrderBy(ts => ts.OrdinalPosition).Last())
                        {
                            <hr />
                        }
                    }
                }
                else
                {
                    <p>There are no transit states</p>
                }
            </div>
        </div>
    </details>

    <details>
        <summary>
            Transport route - import
            @if (Model.IsStateOfImportCompleted)
            {
                <i class="fa fa-check green-text"></i>
            }
            <span class="edit-link-container">@Html.ActionLink("Edit", "Index", "StateOfImport", new { id }, null)</span>
        </summary>
        <div class="expanded-details">
            <div class="panel-indent">
                @if (Model.IsStateOfImportCompleted)
                {
                    <dl>
                        <dt>Country:</dt>
                        <dd>@Html.DisplayFor(m => m.StateOfImportData.Country.Name)</dd>

                        <dt>Competent authority:</dt>
                        <dd>@Html.DisplayFor(m => m.StateOfImportData.CompetentAuthority.Name)</dd>

                        <dt>Entry point:</dt>
                        <dd>@Html.DisplayFor(m => m.StateOfImportData.EntryPoint.Name)</dd>
                    </dl>
                }
                else
                {
                    <p>@ViewBag.SectionIncompleteText</p>
                }
            </div>
        </div>
    </details>

    <details>
        <summary>
            Custom office
            @if (Model.IsCustomsOfficeCompleted)
            {
                <i class="fa fa-check green-text"></i>
            }
            <span class="edit-link-container">@Html.ActionLink("Edit", "List", "CustomsOffice", new { id }, null)</span>
        </summary>
        <div class="expanded-details">
            <div class="panel-indent">
                @if (!string.IsNullOrWhiteSpace(Model.ExitCustomsOffice.Name) || !string.IsNullOrWhiteSpace(Model.EntryCustomsOffice.Name))
                {
                    <dl>
                        @if (!string.IsNullOrWhiteSpace(Model.ExitCustomsOffice.Name))
                        {
                            <dt>Exit customs office name:</dt>
                            <dd>@Html.DisplayFor(m => m.ExitCustomsOffice.Name)</dd>
                            <dt>Exit customs office address:</dt>
                            <dd>@Html.DisplayFor(m => m.ExitCustomsOffice.Address)</dd>
                            <dt>Exit customs office country:</dt>
                            <dd>@Html.DisplayFor(m => m.ExitCustomsOffice.Country.Name)</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.EntryCustomsOffice.Name))
                        {
                            <dt>Entry customs office name:</dt>
                            <dd>@Html.DisplayFor(m => m.EntryCustomsOffice.Name)</dd>
                            <dt>Entry customs office address:</dt>
                            <dd>@Html.DisplayFor(m => m.EntryCustomsOffice.Address)</dd>
                            <dt>Entry customs office country:</dt>
                            <dd>@Html.DisplayFor(m => m.EntryCustomsOffice.Country.Name)</dd>
                        }
                    </dl>
                }
                else if (Model.IsCustomsOfficeCompleted)
                {
                    <p>Not applicable</p>
                }
                else
                {
                    <p>@ViewBag.SectionIncompleteText</p>
                }
            </div>
        </div>
    </details>
</div>