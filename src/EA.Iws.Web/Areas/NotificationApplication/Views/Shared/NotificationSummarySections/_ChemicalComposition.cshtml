@using EA.Iws.Core.WasteType
@model EA.Iws.Web.Areas.NotificationApplication.ViewModels.NotificationApplication.ClassifyYourWasteViewModel
    
@if (Model.IsChemicalCompositionCompleted)
{
    <dl>
        <dt>Type:</dt>
        <dd>@Html.DisplayFor(m => m.ChemicalComposition.ChemicalCompositionType)</dd>

        @if (!string.IsNullOrWhiteSpace(Model.ChemicalComposition.ChemicalCompositionName))
        {
            <dt>Name:</dt>
            <dd>@Html.DisplayFor(m => m.ChemicalComposition.ChemicalCompositionName)</dd>
        }

        @if (!string.IsNullOrWhiteSpace(Model.ChemicalComposition.ChemicalCompositionDescription) && Model.ChemicalComposition.ChemicalCompositionType != ChemicalCompositionType.Wood)
        {
            <dt>Description:</dt>
            <dd>@Html.DisplayFor(m => m.ChemicalComposition.ChemicalCompositionDescription)</dd>
        }

        @if (!string.IsNullOrWhiteSpace(Model.ChemicalComposition.WoodTypeDescription) && Model.ChemicalComposition.ChemicalCompositionType == ChemicalCompositionType.Wood)
        {
            <dt>Description:</dt>
            <dd>@Html.DisplayFor(m => m.ChemicalComposition.WoodTypeDescription)</dd>
        }
    </dl>

    if (Model.ChemicalComposition.ChemicalCompositionType != ChemicalCompositionType.Other)
    {
        <dl>
            <dt>Chemical composition minimum and maximum as a weight by weight percentage:</dt>
        </dl>

        <table title="Chemical composition">
            <thead>
                <tr>
                    <th>Constituent</th>
                    <th>Composition</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.ChemicalComposition.WasteCompositionData.Count; i++)
                {
                    <tr>
                        <td>@Html.DisplayFor(m => m.ChemicalComposition.WasteCompositionData[i].Constituent)</td>
                        <td>
                            @Html.DisplayFor(m => m.ChemicalComposition.WasteCompositionData[i].MinConcentration)%
                            - @Html.DisplayFor(m => m.ChemicalComposition.WasteCompositionData[i].MaxConcentration)%
                        </td>
                    </tr>
                }

                @for (int i = 0; i < Model.ChemicalComposition.WasteAdditionalInformation.Count; i++)
                    {
                    <tr>
                        <td>@Html.DisplayFor(m => m.ChemicalComposition.WasteAdditionalInformation[i].Constituent)</td>
                        <td>
                            @Html.DisplayFor(m => m.ChemicalComposition.WasteAdditionalInformation[i].MinConcentration)%
                            - @Html.DisplayFor(m => m.ChemicalComposition.WasteAdditionalInformation[i].MaxConcentration)%
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <dl>
        @if (!string.IsNullOrWhiteSpace(Model.ChemicalComposition.OtherWasteTypeDescription))
        {
            <dt>Description:</dt>
                <dd>@Model.ChemicalComposition.OtherWasteTypeDescription</dd>
        }

        @if (!string.IsNullOrWhiteSpace(Model.ChemicalComposition.EnergyInformation))
        {
            <dt>Energy efficiency:</dt>
            <dd>@Model.ChemicalComposition.EnergyInformation</dd>
        }

        @if (!string.IsNullOrWhiteSpace(Model.ChemicalComposition.FurtherInformation))
        {
            <dt>Further details:</dt>
            <dd>@Model.ChemicalComposition.FurtherInformation</dd>
        }

        @if (Model.ChemicalComposition.HasAnnex)
        {
            <dt>Further details:</dt>
                <dd>To be provided in a separate annex.</dd>
        }
    </dl>

}
else
{
    <p>@ViewBag.SectionIncompleteText</p>
}