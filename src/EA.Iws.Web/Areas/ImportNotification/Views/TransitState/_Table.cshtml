@using Resource = EA.Iws.Web.Areas.ImportNotification.Views.TransitState.TableResources
@model EA.Iws.Web.Areas.ImportNotification.ViewModels.TransitState.TransitStateCollectionViewModel

@if (Model.TransitStates.Count > 0)
{
    <table class="govuk-table">
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th scope="col" class="govuk-table__header">@Resource.Country</th>
                <th scope="col" class="govuk-table__header">@Resource.CompetentAuthority</th>
                <th scope="col" class="govuk-table__header">@Resource.EntryPoint</th>
                <th scope="col" class="govuk-table__header">@Resource.ExitPoint</th>
                <th scope="col" class="govuk-table__header">@Resource.Action</th>
            </tr>
        </thead>
        <tbody class="govuk-table__body">
            @for (int i = 0; i < Model.TransitStates.Count; i++)
            {
                @Html.HiddenFor(m => m.TransitStates[i].Id)
                @Html.HiddenFor(m => m.TransitStates[i].OrdinalPosition)

                if (Model.TransitStates[i].Country != null)
                {
                    @Html.HiddenFor(m => m.TransitStates[i].Country.Name)
                    @Html.HiddenFor(m => m.TransitStates[i].Country.Id)
                }
                if (Model.TransitStates[i].CompetentAuthority != null)
                {
                    @Html.HiddenFor(m => m.TransitStates[i].CompetentAuthority.Id)
                    @Html.HiddenFor(m => m.TransitStates[i].CompetentAuthority.Code)
                    @Html.HiddenFor(m => m.TransitStates[i].CompetentAuthority.Name)
                }
                if (Model.TransitStates[i].ExitPoint != null)
                {
                    @Html.HiddenFor(m => m.TransitStates[i].ExitPoint.Id)
                    @Html.HiddenFor(m => m.TransitStates[i].ExitPoint.Name)
                }
                if (Model.TransitStates[i].EntryPoint != null)
                {
                    @Html.HiddenFor(m => m.TransitStates[i].EntryPoint.Id)
                    @Html.HiddenFor(m => m.TransitStates[i].EntryPoint.Name)
                }

                <tr class="govuk-table__row">
                    <td class="govuk-table__cell">
                        @(Model.TransitStates[i].Country != null ? Model.TransitStates[i].Country.Name : string.Empty)
                    </td>
                    <td class="govuk-table__cell">
                        @(Model.TransitStates[i].CompetentAuthority != null ? Model.TransitStates[i].CompetentAuthority.Code + " - " + Model.TransitStates[i].CompetentAuthority.Name : string.Empty)
                    </td>
                    <td class="govuk-table__cell">
                        @(Model.TransitStates[i].EntryPoint != null ? Model.TransitStates[i].EntryPoint.Name : string.Empty)
                    </td>
                    <td class="govuk-table__cell">
                        @(Model.TransitStates[i].ExitPoint != null ? Model.TransitStates[i].ExitPoint.Name : string.Empty)
                    </td>
					<td class="govuk-table__cell">
						<span style="white-space: nowrap">
							@Html.ActionLink("Edit", "Edit", new { entityId = Model.TransitStates[i].Id })
							|
							<button class="link-submit in-table govuk-link" type="submit" name="deleteId" onclick="deletePost(event)" value="@Model.TransitStates[i].Id">Delete</button>
						</span>
					</td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="form-group">
    @Html.ActionLink("Add", "Add")
</div>

@if (Model.TransitStates.Count == 0)
{
    <div class="form-group @Html.Gds().FormGroupClass(m => m.HasNoTransitStates)">
        @Html.Gds().ValidationMessageFor(m => m.HasNoTransitStates)
        <div class="multiple-choice">
            @Html.CheckBoxFor(m => m.HasNoTransitStates)
            <label for="HasNoTransitStates">
                @Resource.Checkbox
            </label>
        </div>
    </div>
}