@using EA.Iws.Core.Shared
@using EA.Iws.Web.Areas.AddressBook.Views
@using EnumHelper = EA.Prsd.Core.Helpers.EnumHelper
@using Resource = EA.Iws.Web.Areas.ImportNotification.Views.Facility.AddResources
@using BusinessResources = EA.Iws.Web.ViewModels.Shared.BusinessResources
@model EA.Iws.Web.Areas.ImportNotification.ViewModels.Facility.FacilityViewModel

@{
    ViewBag.Title = Resource.TabTitle;
}

@{
    var limitedCompanyId = "LimitedCompany" + Model.FacilityId;
    var otherId = "Other" + Model.FacilityId;
}

<h1 class="govuk-heading-l">@Html.Raw(string.Format(Resource.Title, Model.NotificationType.ToString().ToLower()))</h1>

@using (Html.BeginForm())
{
    @Html.Gds().ValidationSummary()
    @Html.AntiForgeryToken()

    <h2 class="heading-medium">@Resource.OrganisationHeading</h2>

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.BusinessType)">
        @Html.Gds().LabelFor(m => m.BusinessType, false)
        @Html.Gds().ValidationMessageFor(m => m.BusinessType)
        <fieldset>
            <div class="govuk-radios__item" data-target="sole-trader-number">
                @Html.RadioButtonFor(m => m.BusinessType, "SoleTrader", new { @class = "govuk-radios__input", @id = "SoleTrader" })
                <label class="govuk-label govuk-radios__label" for="SoleTrader">
                    @EnumHelper.GetDisplayName(BusinessType.SoleTrader)
                </label>
            </div>

            <div class="govuk-radios__item" data-target="partnership-number">
                @Html.RadioButtonFor(m => m.BusinessType, "Partnership", new { @class = "govuk-radios__input", @id = "Partnership" })
                <label class="govuk-label govuk-radios__label" for="Partnership">
                    @EnumHelper.GetDisplayName(BusinessType.Partnership)
                </label>
            </div>

            <div class="govuk-radios__item">
                @Html.RadioButtonFor(m => m.BusinessType, BusinessType.LimitedCompany, new { @class = "govuk-radios__input", id = "LimitedCompany" })
                <label class="govuk-label govuk-radios__label" for="LimitedCompany">
                    @EnumHelper.GetDisplayName(BusinessType.LimitedCompany)
                </label>
            </div>

            <div class="panel @(Model.BusinessType != null && Model.BusinessType.Equals("Limited company") ? "" : "js-hidden")" id="companies-house-number">
                <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Business.RegistrationNumber)" data-validation-behaviour="ignore-parent">
                    @Html.Gds().LabelFor(m => m.Business.RegistrationNumber, false)
                    <span class="form-hint" id="RegNumHintUk">@BusinessResources.RegistrationNumberHintUK</span>
                    <span class="form-hint" id="RegNumHintNonUk" style="display:none;">@BusinessResources.RegistrationNumberHintNonUK</span>
                    @Html.Gds().ValidationMessageFor(m => m.Business.RegistrationNumber)
                    @Html.Gds().TextBoxFor(m => m.Business.RegistrationNumber)
                    <div>
                        <br />
                    </div>
                    <details id="CompaniesHouseSummary" data-target="companies-house-number" class="govuk-details" data-module="govuk-details">
                        <summary class="govuk-details__summary">
                            <span class="govuk-details__summary-text">
                                @BusinessResources.WhereToFindCompanyHouse
                            </span>
                        </summary>
                        <div class="govuk-details__text">
                            @Html.Raw(BusinessResources.CompanyHouseDescription)
                        </div>
                    </details>
                </div>
            </div>

            <div class="govuk-radios__item">
                @Html.RadioButtonFor(m => m.BusinessType, BusinessType.Other, new { @class = "govuk-radios__input", id = "Other" })
                <label class="govuk-label govuk-radios__label" for="Other">
                    @EnumHelper.GetDisplayName(BusinessType.Other)
                </label>
            </div>
        </fieldset>
    </div>

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Business.RegistrationNumber)" id="dvRegNumber">
        @Html.Gds().LabelFor(m => m.Business.RegistrationNumber)
        @Html.Gds().ValidationMessageFor(m => m.Business.RegistrationNumber)
        @Html.Gds().TextBoxFor(m => m.Business.RegistrationNumber)
    </div>

    <h2 class="heading-medium">@Resource.OrganisationNameTitle</h2>
    <hr />
    <div class="govuk-form-group" id="dvOrgNameDesction">
        @Resource.OrgHelpWithNamingDescription
    </div>
    <details class="govuk-details" data-module="govuk-details" id="dvOrgNameDetails">
        <summary class="govuk-details__summary">
            <span class="govuk-details__summary-text">
                Help with appropriate naming conventions
            </span>
        </summary>
        <div class="govuk-details__text">
            When inputting your organisation name, the following naming conventions should be used to minimise errors:
            <div id="dvImpNotificationOrgName">
                <ul class="govuk-list govuk-list--bullet">
                    <li>Company name abbreviations should always be in uppercase with no full stops</li>
                    <li>Company suffixes should always be uppercase with no full stops</li>
                    <li>There should be no spaces either side of special characters, particularly at the end of the name</li>
                    <li>For example: Instead of 'A & b Materials c.d.' the name should be 'A&B Materials CD'</li>
                </ul>
            </div>
        </div>
    </details>
    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Business.Name)">
        @Html.Gds().LabelFor(m => m.Business.Name, false)
        @Html.Gds().ValidationMessageFor(m => m.Business.Name)

        <div id="dvBtnImportName" class="govuk-form-group">
            <button id="btnImportName" class="govuk-button" type="submit">Import name</button>
        </div>

        @Html.Gds().HintSpan(@Resource.OrgNameHintMsg, id: "hintOrgName")
        @Html.Gds().TextBoxFor(m => m.Business.Name, new
        {
            data_addressbook_url = Url.Action("Index", "Search", new { area = "AddressBook" }),
            data_addressbook_type = "Facility"
        })
    </div>

    <div class="govuk-form-group">
        @Html.Gds().LabelFor(m => m.Business.OrgTradingName)
        @Html.Gds().HintSpan(@Resource.OrgTradingNameHint)
        <span>
            <input class="govuk-input govuk-input--width-2" id="width-2" name="width-2" type="text" value="T/A" readonly>
            @Html.Gds().TextBoxFor(m => m.Business.OrgTradingName, new { @class = "orgTradingName" })
        </span>
    </div>

    @Html.EditorFor(m => m.Address)

    @Html.EditorFor(m => m.Contact)

    <div class="govuk-form-group no-js-hidden">
        <div class="govuk-checkboxes" data-module="govuk-checkboxes">
            <div class="multiple-choice govuk-checkboxes__item">
                @Html.CheckBoxFor(m => m.IsAddedToAddressBook, new { id = "addressBook", @class = "govuk-checkboxes__input" })
                <label class="govuk-label govuk-checkboxes__label" for="addressBook">
                    Add as new contact and address to the address book
                </label>
            </div>
        </div>
    </div>

    <div class="govuk-form-group">
        <button class="govuk-button" type="submit">@Constants.ContinueButtonText</button>
    </div>
}

@section scripts {
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            var isLimitedCompanyChecked = document.querySelector('input[id="LimitedCompany"]:checked').value;
            if (isLimitedCompanyChecked) {
                showImportFromCompHouseSection();
            }
        });

        function hideImportFromCompHouseSection() {
            $("#btnImportName").hide();
            $("#hintOrgName").show();
            $("#Business_Name").removeAttr('readonly');
            $("#dvOrgNameDesction").hide();
            $("#dvOrgNameDetails").show();
            $("#dvRegNumber").show();
            $('#companies-house-number').hide();
        }

        function showImportFromCompHouseSection() {
            $("#btnImportName").show();
            $("#hintOrgName").hide();
            $("#Business_Name").attr('readonly', 'readonly');
            $("#dvOrgNameDesction").show();
            $("#dvOrgNameDetails").hide();
            $("#dvRegNumber").hide();
            $('#companies-house-number').show();
        }

        function disabledImportNameButton() {
            $('#btnImportName').attr('disabled', 'disabled');
        }

        function enabledImportNameButton() {
            $('#btnImportName').removeAttr('disabled');
        }

        $(function () {
            //On page load, controls hide
            $("#btnImportName").hide();
            $("#dvOrgNameDesction").hide();

            //On page load, controls show
            $("#hintOrgName").show();
            $("#dvOrgNameDetails").show();

            $('#SoleTrader').click(function () {
                hideImportFromCompHouseSection();
            });

            $('#Partnership').click(function () {
                hideImportFromCompHouseSection();
            });

            $('#LimitedCompany').click(function () {
                showImportFromCompHouseSection();
            });

            $('#Other').click(function () {
                hideImportFromCompHouseSection();
            });

            var regNumber = $('#Business_RegistrationNumber').val();
            if ((regNumber === null) || (regNumber === '')) {
                disabledImportNameButton();
            }

            $("#Business_RegistrationNumber").focusout(function () {
                var regNumber = $('#Business_RegistrationNumber').val();
                if ((regNumber === null) || (regNumber === '')) {
                    disabledImportNameButton();
                } else {
                    enabledImportNameButton();
                }
            });

            $('#btnImportName').click(function () {
                var regNumber = $('#Business_RegistrationNumber').val();
                if ((regNumber !== null) && (regNumber !== '')) {
                    $.ajax({
                        url: 'GetCompanyName',
                        type: 'POST',
                        dataType: 'json',
                        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                        data: { "registrationNumber": regNumber, __RequestVerificationToken: $("[name=__RequestVerificationToken]").val() },
                        success: function (result) {
                            $("#Business_Name").val(result);
                        }
                    });
                }
                return false;
            });
        });
    </script>
}