@using Resource = EA.Iws.Web.Areas.ImportNotification.Views.StateOfImport.IndexResources
@model EA.Iws.Web.Areas.ImportNotification.ViewModels.StateOfImport.StateOfImportViewModel

@{
    ViewBag.Title = Resource.TabTitle;
}

<h1 class="heading-large">@Resource.Title</h1>

@using (Html.BeginForm())
{
    @Html.Gds().ValidationSummary()
    @Html.AntiForgeryToken()

    <div class="form-group @Html.Gds().FormGroupClass(m => m.CompetentAuthorityId)">
        @Html.Gds().LabelFor(m => m.CompetentAuthorityId, false)
        @Html.Gds().ValidationMessageFor(m => m.CompetentAuthorityId)
        <fieldset>
            @for (int i = 0; i < Model.CompetentAuthorities.Count; i++)
            {
                @Html.HiddenFor(m => m.CompetentAuthorities[i].Code)
                @Html.HiddenFor(m => m.CompetentAuthorities[i].Name)
                @Html.HiddenFor(m => m.CompetentAuthorities[i].Id)
                var label = string.Format("{0} - {1}", Model.CompetentAuthorities[i].Code, Model.CompetentAuthorities[i].Name);
                <div class="form-group form-group-compound">
                    <label class="block-label" for="@Model.CompetentAuthorities[i].Id">
                        @Html.RadioButtonFor(m => m.CompetentAuthorityId, Model.CompetentAuthorities[i].Id, new { id = Model.CompetentAuthorities[i].Id })
                        @label
                    </label>
                </div>
            }
        </fieldset>
    </div>

    <div class="form-group @Html.Gds().FormGroupClass(m => m.EntryPointId)">
        @for (int i = 0; i < Model.EntryPoints.Count; i++)
        {
            @Html.HiddenFor(m => m.EntryPoints[i].Id)
            @Html.HiddenFor(m => m.EntryPoints[i].Name)
        }
        @Html.Gds().LabelFor(m => m.EntryPointId, false)
        @Html.Gds().ValidationMessageFor(m => m.EntryPointId)
        @Html.Gds().DropDownListFor(m => m.EntryPointId, Model.EntryPointList, string.Empty)
    </div>

    <button class="button" type="submit">@Constants.ContinueButtonText</button>
}