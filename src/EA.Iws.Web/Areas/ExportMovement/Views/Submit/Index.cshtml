@using Resource = EA.Iws.Web.Areas.ExportMovement.Views.Submit.IndexResources
@model EA.Iws.Web.Areas.ExportMovement.ViewModels.Submit.SubmitViewModel
@{
    ViewBag.Title = Resource.TabTitle;
}

<header class="hgroup">
    <h1 class="govuk-heading-l">@Resource.Title</h1>
</header>

<p>
    @Resource.RedownloadParagraph
@Html.ActionLink(Resource.DownloadLink, "GenerateMovementDocument", "Home", new { id = Model.MovementId, area = "ExportMovement" }, new { })
</p>
<p>@Resource.Paragraph</p>

@using (Html.BeginForm(null, "Submit", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.NotificationId)
    @Html.HiddenFor(m => m.MovementId)
    @Html.Gds().ValidationSummary()

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.File)">
        <label for="@Html.NameFor(m => m.File)" class="visually-hidden">@Html.DisplayNameFor(m => m.File)</label>
        @Html.Gds().ValidationMessageFor(m => m.File)
        @Html.Gds().TextBoxFor(m => m.File, new { type = "file", id = "fileInput" })
    </div>

    <div class="form-group-compound">
        <button class="govuk-button" id="uploadButton" type="submit">@Constants.ContinueButtonText</button>
        <label class="" id="uploadStatusLabel"></label>
    </div>
}
<div class="govuk-form-group">
    <p>
        @Html.ActionLink(Resource.ReturnToNotificationOptions,
            "Index",
            "Options",
            new { area = "NotificationApplication", id = Model.NotificationId },
            null)
    </p>
</div>


<script>
    window.addEventListener('pageshow', function (event) {
        if (event.persisted) {
            // Page was loaded from back/forward cache
            // So force a reload
            window.location.reload();
        }
    });

    function disableButton() {
        // Get reference to the file input
        var fileInput = document.getElementById("fileInput");

        // Check if there is a selected file
        if (fileInput && fileInput.files.length > 0)
        {
            var button = document.getElementById("uploadButton");
            var label = document.getElementById("uploadStatusLabel");

            // Disable the button
            button.disabled = true;

            // Show the label with the specified text
            label.innerText = "File upload in progress. Please wait";
        }

        // Get the form element by its ID
        var form = document.getElementById("uploadForm");
        // Use the submit() method to submit the form
        form.submit();
    }
</script>