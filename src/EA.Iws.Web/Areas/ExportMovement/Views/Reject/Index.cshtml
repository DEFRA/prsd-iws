@model EA.Iws.Web.Areas.ExportMovement.ViewModels.Reject.RejectViewModel
@using Resource = EA.Iws.Web.Areas.ExportMovement.Views.Reject.IndexResources

@{
    ViewBag.Title = Resource.Title;
}

<h1 class="govuk-heading-l">@Resource.MainHeading</h1>

@using (Html.BeginForm("Index", "Reject", FormMethod.Post, new { enctype = "multipart/form-data", id = "uploadForm" }))
{
    @Html.AntiForgeryToken()
    @Html.Gds().ValidationSummary()
    @Html.HiddenFor(m => m.NotificationId)
    @Html.HiddenFor(m => m.MovementDate)

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.RejectionDate) @Html.Gds().FormGroupClass(m => m.RejectionDate.Day) @Html.Gds().FormGroupClass(m => m.RejectionDate.Month) @Html.Gds().FormGroupClass(m => m.RejectionDate.Year)">
        @Html.LabelFor(m => m.RejectionDate, new { @class = "heading-small" })
        @Html.EditorFor(m => m.RejectionDate)
    </div>

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.RejectionReason)">
        @Html.LabelFor(m => m.RejectionReason, new { @class = "heading-small" })
        @Html.Gds().HintParagraph(Resource.RejectionReasonHint)
        @Html.Gds().ValidationMessageFor(m => m.RejectionReason)
        @Html.TextAreaFor(m => m.RejectionReason, new { MaxLength = 200, style = "width: 100%; height: 110px", title = "Rejection reason" })
    </div>

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.File)">
        @Html.LabelFor(m => m.File, new { @class = "heading-small" })
        <br />
        @Html.Gds().ValidationMessageFor(m => m.File)
        @Html.Gds().TextBoxFor(m => m.File, new { type = "file", id="fileInput" })
    </div>

    <div class="govuk-form-group">
        <button class="govuk-button" id="uploadButton" type="submit">@Constants.ContinueButtonText</button>

        <label class="" id="uploadStatusLabel"></label>
    </div>
}

<div class="govuk-form-group">
    @Html.ActionLink("Go to notification options", "Index", "Options",
        new { id = Model.NotificationId, area = "NotificationApplication" },
        null)
</div>

<script>
    window.addEventListener('pageshow', function (event) {
        if (event.persisted) {
            // Page was loaded from back/forward cache
            // So force a reload
            window.location.reload();
        }
    });


    function disableButton() {
        // Get reference to the file input
        var fileInput = document.getElementById("fileInput");

        // Check if there is a selected file
        if (fileInput && fileInput.files.length > 0)
        {
            var button = document.getElementById("uploadButton");
            var label = document.getElementById("uploadStatusLabel");

            // Disable the button
            button.disabled = true;

            // Show the label with the specified text
            label.innerText = "File upload in progress. Please wait";
        }

        // Get the form element by its ID
        var form = document.getElementById("uploadForm");
        // Use the submit() method to submit the form
        form.submit();
    }
</script>