@model EA.Iws.Web.Areas.AdminExportAssessment.ViewModels.OperationCodes.OperationCodesViewModel
@using EA.Iws.Core.Shared
@using Resource = EA.Iws.Web.Areas.AdminExportAssessment.Views.OperationCodes.EditResources

@{
    var typeText = Model.NotificationType == NotificationType.Disposal ? "Disposal" : "Recovery";
    ViewBag.Title = string.Format(Resource.Title, typeText);
}

<div class="grid-row">
    <div class="column-two-thirds">
        <h1 class="govuk-heading-l">@Model.Header</h1>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.Gds().ValidationSummary()
            @Html.HiddenFor(m => m.NotificationType)
            <div class="govuk-form-group">
                <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                    @for (int i = 0; i < Model.PossibleCodes.Count; i++)
                    {
                        MvcHtmlString idForThisCheckBox = Html.NameFor(m => m.PossibleCodes[i].Key);
                        @Html.HiddenFor(m => m.PossibleCodes[i].Key)
                        <div class="multiple-choice govuk-checkboxes__item">
                            @Html.CheckBoxFor(m => m.PossibleCodes[i].Value, new { id = idForThisCheckBox, @class = "govuk-checkboxes__input" })
                            <label class="govuk-label govuk-checkboxes__label grid-view" for="@idForThisCheckBox">
                                @Html.Raw(Model.DisplayValues[i])
                            </label>
                        </div>
                    }
                </div>
            </div>
            <button type="submit" class="govuk-button">@Constants.ContinueButtonText</button>
        }
    </div>
</div>


@section menu {
    @Html.Action("ExportNavigation", "Menu", new { area = "Admin", section = ExportNavigationSection.Assessment })
}
