@model EA.Iws.Web.Areas.AdminExportAssessment.ViewModels.FinancialGuarantee.FinancialGuaranteeDecisionViewModel


<div class="form-group @Html.Gds().FormGroupClass(m => m.ApprovedFrom.Day)  @Html.Gds().FormGroupClass(m => m.ApprovedFrom.Month)  @Html.Gds().FormGroupClass(m => m.ApprovedFrom.Year)">
    @Html.Gds().ValidationMessageFor(m => m.ApprovedFrom)
    @Html.Gds().LabelFor(m => m.ApprovedFrom, false)
    @Html.EditorFor(m => m.ApprovedFrom)
</div>

<div class="form-group @Html.Gds().FormGroupClass(m => m.ApprovedTo.Day) @Html.Gds().FormGroupClass(m => m.ApprovedTo.Month) @Html.Gds().FormGroupClass(m => m.ApprovedTo.Year)">
    @Html.Gds().ValidationMessageFor(m => m.ApprovedTo)
    @Html.Gds().LabelFor(m => m.ApprovedTo, false)
    @Html.EditorFor(m => m.ApprovedTo)
</div>

<div class="form-group">
    <div>Is this a blanket bond?</div>

    <div class="form-group">
        <label class="block-label" for="rdoNo">
            @Html.RadioButtonFor(m => m.IsApproved, false, new { @class = "", @id = "rdoNo" })No
        </label>

        <label class="block-label" data-target="blanketbondreference" for="rdoYes">
            @Html.RadioButtonFor(m => m.IsApproved, true, new { @class = "", @id = "rdoYes" })Yes
        </label>
    </div>

    <div class="@(Model.IsApproved.GetValueOrDefault() ? string.Empty : "js-hidden")" id="blanketbondreference">
        <div class="form-group @Html.Gds().FormGroupClass(m => m.BlanketBondReference)">
            @Html.Gds().ValidationMessageFor(m => m.BlanketBondReference)
            @Html.Gds().LabelFor(m => m.BlanketBondReference, showOptionalLabel: false)
            @Html.Gds().TextBoxFor(m => m.BlanketBondReference, new { @MaxLength = "70" })
        </div>
    </div>
</div>

<div class="form-group @Html.Gds().FormGroupClass(m => m.ActiveLoadsPermitted)">
    @Html.Gds().ValidationMessageFor(m => m.ActiveLoadsPermitted)
    @Html.Gds().LabelFor(m => m.ActiveLoadsPermitted, false)
    @Html.Gds().TextBoxFor(m => m.ActiveLoadsPermitted, new { type = "number", min = "1", step = "1", pattern = "[0-9]*" })
</div>

<div class="form-group @Html.Gds().FormGroupClass(m => m.AmountOfCoverProvided)">
    @Html.Gds().ValidationMessageFor(m => m.AmountOfCoverProvided)
    @Html.Gds().LabelFor(m => m.AmountOfCoverProvided, false)
    @Html.Gds().TextBoxFor(m => m.AmountOfCoverProvided)
</div>