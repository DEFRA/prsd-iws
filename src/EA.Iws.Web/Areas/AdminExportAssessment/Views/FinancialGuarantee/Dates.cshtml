@model EA.Iws.Web.Areas.AdminExportAssessment.ViewModels.FinancialGuarantee.FinancialGuaranteeDatesViewModel
@{
    ViewBag.Title = "Financial guarantee dates";
}

<h1 class="heading-large">Financial guarantee assessment</h1>

<dl class="object-summary">
    <dt>Status:</dt>
    <dd>@Html.DisplayFor(m => m.Status)</dd>
    @if (Model.DecisionRequired.HasValue)
    {
        <dt>Decision required by:</dt>
        <dd>@Model.DecisionRequired.Value.ToShortDateString()</dd>
    }
</dl>

@using (Html.BeginForm())
{
    @Html.Gds().ValidationSummary()
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.Status)
    @Html.HiddenFor(m => m.IsRequiredEntryComplete)

    <div class="form-group @Html.Gds().FormGroupClass(m => m.Received.Day) @Html.Gds().FormGroupClass(m => m.Received.Month) @Html.Gds().FormGroupClass(m => m.Received.Year)">
        <label class="form-label" for="Received_Day">Guarantee received</label>
        @Html.Gds().HintParagraph("For example, 20 3 2015")
        @Html.EditorFor(m => m.Received)
    </div>

    if (Model.IsRequiredEntryComplete)
    {
        <div class="form-group @Html.Gds().FormGroupClass(m => m.Completed.Day) @Html.Gds().FormGroupClass(m => m.Completed.Month) @Html.Gds().FormGroupClass(m => m.Completed.Year)">
            <label class="form-label" for="Completed_Day">Guarantee completed</label>
            @Html.EditorFor(m => m.Completed)
        </div>
    }

    <button class="button" type="submit">@Constants.ContinueButtonText</button>
}