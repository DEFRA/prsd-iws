@using EA.Iws.Core.Shared
@model EA.Iws.Web.Areas.NotificationMovements.ViewModels.Home.MovementSummaryViewModel

@{
    ViewBag.Title = "Shipment summary";
    Layout = "~/Views/Shared/_Layout.GovUK.Sections.cshtml";
}

<div class="shipping-home">

    <section class="noti-switch" id="">
        <div>
            <span>You're working on</span>
            <button class="button note" type="button">@Model.NotificationNumber</button>
            <i class="fa fa-exchange"></i>
            <button class="button switch" type="button">Change notification</button>
        </div>
    </section>

    <h1 class="heading-large">
        Shipment summary
    </h1>

    <div class="grid-row">
        <div class="column-half">
            <table class="odd-table">
                <caption class="visuallyhidden">Shipment summary</caption>
                <tbody>
                    <tr>
                        <td>Total intended number of shipments:</td>
                        <td>@Model.IntendedShipments</td>
                    </tr>
                    <tr>
                        <td>Number of shipments used:</td>
                        <td>@Model.UsedShipments</td>
                    </tr>
                    <tr>
                        <td>Total quantity received:</td>
                        <td>@Model.QuantityReceivedTotal</td>
                    </tr>
                    <tr>
                        <td>Active loads permitted:</td>
                        <td>@Model.ActiveLoadsPermitted</td>
                    </tr>
                    <tr>
                        <td>Current active loads:</td>
                        <td>@Model.ActiveLoadsCurrent</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="column-half nav-bloc">
            <h2 class="heading-small">Shipping options</h2>
            <nav>
                <a title="Generate a pre-notification" href="/">
                    @Html.ActionLink("Generate a pre-notification", "Index", "NotificationMovement", new { id = Model.NotificationId, area = string.Empty }, null)
                </a>

                <a title="Cancel a pre-notification" href="/">
                    @Html.ActionLink("Cancel a pre-notification", "Index", "CancelMovement")
                </a>

                <a title="Record a certificate of receipt" href="/">
                    @Html.ActionLink("Record a certificate of receipt", "Index", "ReceiveMovement", new { notificationId = Model.NotificationId, area = "NotificationMovements" }, null)
                </a>

                @{ var linkText = "Record a certificate of " + (Model.NotificationType == NotificationType.Disposal ? "disposal" : "recovery"); }
                <a title="Record certificate of recovery" href="/">
                    @Html.ActionLink(linkText, "Index", "Complete")
                </a>
            </nav>
        </div>
    </div>

    <section class="ship-data">
        <h3 class="heading-small">
            Information, dates and status
        </h3>
        <p>
            Configure your results
        </p>
        <div class="grid-row form-group">
            <div class="column-half">
                <select name="select" class="form-control view-by">
                    <option value="value1" selected>View all</option>
                    <option value="value2">Pre-notified</option>
                    <option value="value3">Recovered</option>
                    <option value="value4">Rejected</option>
                    <option value="value5">Canceled</option>
                    <option value="value6">Complete</option>
                    <option value="value7">Shipment due</option>
                </select>
                <select name="select" class="form-control">
                    <option value="value1" selected>50 per page</option>
                    <option value="value2">100 per page</option>
                    <option value="value3">250 per page</option>
                    <option value="value4">500 per page</option>
                </select>
            </div>

        </div>

        @{
            var operationTitle = Model.NotificationType == NotificationType.Disposal ? "Disposed Of" : "Recovered";
            var nullMarker = "- -";
        }

        <div class="form-group">
            <table class="odd-table">
                <caption class="visuallyhidden">Shipment summary</caption>
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>Status</th>
                        <th>Pre-notified</th>
                        <th>Shipment due</th>
                        <th>Received</th>
                        <th>Quantity</th>
                        <th>@operationTitle</th>
                    </tr>
                </thead>

                <tbody>
                    @{
                        for (int i = 0; i < Model.TableData.Count; i++)
                        {
                            <tr>
                                <td>@Model.TableData[i].Number</td>
                                <td>@Model.TableData[i].Status</td>
                                <td>@Model.TableData[i].PreNotification</td>
                                <td>
                                    @if (Model.TableData[i].ShipmentDate.HasValue)
                                    {
                                        @Html.Gds().DisplayShortDateFor(m => m.TableData[i].ShipmentDate.GetValueOrDefault())
                                    }
                                    else
                                    {
                                        @nullMarker
                                    }
                                </td>
                                <td>
                                    @if (Model.TableData[i].Received.HasValue)
                                    {
                                        @Html.Gds().DisplayShortDateFor(m => m.TableData[i].Received.GetValueOrDefault())
                                    }
                                    else
                                    {
                                        @nullMarker
                                    }
                                </td>
                                <td>@Model.TableData[i].Quantity</td>
                                <td>
                                    @if (Model.TableData[i].RecoveredOrDisposedOf.HasValue)
                                    {
                                        @Html.Gds().DisplayShortDateFor(m => m.TableData[i].RecoveredOrDisposedOf.GetValueOrDefault())
                                    }
                                    else
                                    {
                                        @nullMarker
                                    }
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </section>
    <div class="form-group">
        @Html.ActionLink("Go to notification options",
            "ApprovedNotification",
            "Applicant",
            new { area = string.Empty, id = Model.NotificationId },
            new { @class = "button" })
    </div>
</div>