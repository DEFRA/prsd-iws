@using Resource = EA.Iws.Web.Areas.NotificationMovements.Views.UploadChoice.IndexResources
@model EA.Iws.Web.Areas.NotificationMovements.ViewModels.UploadChoice.UploadChoiceViewModel

@{
    Layout = "~/Areas/NotificationMovements/Views/Shared/_CreateSummaryLayout.cshtml";
    ViewBag.Title = Resource.TabTitle;
}

<h1 class="govuk-heading-l">@Resource.Title</h1>

@if (Model.NoMovementsToList)
{
    <p>@Resource.NoMovementText</p>

    @Html.ActionLink(Resource.NotificationOptionsLinkText, "Index", "Options",
        new { id = Model.NotificationId, area = "NotificationApplication" },
        new { @class = "govuk-button" })
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.Gds().ValidationSummary()
        @Html.HiddenFor(m => m.NotificationId)
        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Shipments)">
            <fieldset>
                <p>@Resource.SelectPrenotificationsParagraph</p>

                @for (int i = 0; i < Model.Shipments.Count(); i++)
                {
                    <div class="multiple-choice">
                        @Html.HiddenFor(m => m.Shipments[i].Id)
                        @Html.HiddenFor(m => m.Shipments[i].DisplayName)
                        @Html.CheckBoxFor(m => m.Shipments[i].IsSelected)
                        <label for="@Html.IdFor(m => m.Shipments[i].IsSelected)">@Model.Shipments[i].DisplayName</label>
                    </div>
                }
            </fieldset>
        </div>

        <div class="govuk-form-group">
            <button class="govuk-button" type="submit">@Constants.ContinueOnlyButtonText</button>
        </div>

        <div>
            @Html.ActionLink(Resource.NotificationOptionsLinkText, "Index", "Options",
                new { id = Model.NotificationId, area = "NotificationApplication" }, null)
        </div>
    }
}