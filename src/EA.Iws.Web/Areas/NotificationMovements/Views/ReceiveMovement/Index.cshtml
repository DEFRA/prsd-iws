@using Resource = EA.Iws.Web.Areas.NotificationMovements.Views.ReceiveMovement.IndexResources
@model EA.Iws.Web.Areas.NotificationMovements.ViewModels.ReceiveMovement.MovementReceiptViewModel
@{
    Layout = "~/Areas/NotificationMovements/Views/Shared/_SummaryLayout.cshtml";
    ViewBag.Title = "Which shipment has been received?";
}

<h1 class="heading-large">Which shipment has been received?</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Gds().ValidationSummary()

    @Html.HiddenFor(m => m.NotificationId)

    if (Model.ReceiveShipments == null || Model.ReceiveShipments.Count() == 0)
    {
        <p>You currently have no active shipments to record as received.</p>

        @Html.ActionLink("Continue",
            "Index",
            "Options",
            new { area = "NotificationApplication", id = Model.NotificationId },
            new { @class = "button" })
    }
    else
    {
        <div class="form-group @Html.Gds().FormGroupClass(m => m.ReceiveShipments)">
            <fieldset>
                <h2 class="heading-small">@Resource.ReceiveTitle</h2>

                @for (int i = 0; i < Model.ReceiveShipments.Count(); i++)
                {
                    <div class="multiple-choice">
                        @Html.HiddenFor(m => m.ReceiveShipments[i].Id)
                        @Html.HiddenFor(m => m.ReceiveShipments[i].DisplayName)
                        @Html.CheckBoxFor(m => m.ReceiveShipments[i].IsSelected)
                        <label for="@Html.IdFor(m => m.ReceiveShipments[i].IsSelected)">@Model.ReceiveShipments[i].DisplayName</label>
                    </div>
                }
</fieldset>
        </div>
    }
    <hr />
    if (Model.RecoveryShipments == null || Model.RecoveryShipments.Count() == 0)
    {
        <p>You have no active shipments with a recorded certificate of receipt.</p>

        @Html.ActionLink("Continue",
            "Index",
            "Options",
            new { area = "NotificationApplication", id = Model.NotificationId },
            new { @class = "button" })
    }
    else
    {
        <div class="form-group @Html.Gds().FormGroupClass(m => m.RecoveryShipments)">
            <fieldset>
                <p class="heading-small">@Resource.RecoveryTitle</p>

                @for (int i = 0; i < Model.RecoveryShipments.Count(); i++)
                {
                    <div class="multiple-choice">
                        @Html.HiddenFor(m => m.RecoveryShipments[i].Id)
                        @Html.HiddenFor(m => m.RecoveryShipments[i].DisplayName)
                        @Html.CheckBoxFor(m => m.RecoveryShipments[i].IsSelected)
                        <label for="@Html.IdFor(m => m.RecoveryShipments[i].IsSelected)">@Model.RecoveryShipments[i].DisplayName</label>
                    </div>
                }
</fieldset>
        </div>
    }

    if ((Model.ReceiveShipments != null && Model.ReceiveShipments.Count() > 0) || (Model.RecoveryShipments != null && Model.RecoveryShipments.Count() > 0))
        {
    <div class="form-group-compound">
        <button class="button" type="submit">Continue</button>
    </div>

        @Html.ActionLink("Go to notification options",
                 "Index",
                 "Options",
                 new { area = "NotificationApplication", id = Model.NotificationId },
                 null)
    }
}
