@using Resource = EA.Iws.Web.Areas.NotificationMovements.Views.PrenotificationBulkUpload.PrenotificationBulkUploadResources
@model EA.Iws.Web.Areas.NotificationMovements.ViewModels.PrenotificationBulkUpload.PrenotificationBulkUploadViewModel

@{
    ViewBag.Title = @Resource.UploadPrenotificationsTabTitle;
    Layout = "~/Views/Shared/_Layout.GovUK.Sections.cshtml";
}

<div class="govuk-form-group">
    <div>
        <h1 class="heading-large">@Resource.UploadPrenotificationsTitle</h1>
        <p>@Resource.UploadPrenotificationsText1</p>
        <p>@Resource.UploadPrenotificationsText2</p>
        <p>
            <ul class="list-bullet grey-text">
                For example:
                <li>@Resource.UploadPrenotificationsList1</li>
                <li>@Resource.UploadPrenotificationsList2</li>
                <li>@Resource.UploadPrenotificationsList3</li>
                <li>@Resource.UploadPrenotificationsList4</li>
                <li>@Resource.UploadPrenotificationsList5</li>
                <li>@Resource.UploadPrenotificationsList6</li>
            </ul>
        </p>
        <p>
    </div>

    @using (Html.BeginForm("UploadPrenotifications", null, null, FormMethod.Post, HtmlHelper.AnonymousObjectToHtmlAttributes(new { enctype = "multipart/form-data", id = "uploadForm" })))
    {
        @Html.AntiForgeryToken()
        @Html.Gds().ValidationSummary()

        <div class="form-group @Html.Gds().FormGroupClass(m => m.File)">
            <label for="@Html.NameFor(m => m.File)" class="visually-hidden">@Html.DisplayNameFor(m => m.File)</label>
            @Html.Gds().ValidationMessageFor(m => m.File)
            @Html.Gds().TextBoxFor(m => m.File, new { type = "file", id = "fileInput" })
        </div>

        <div class="form-group-compound">
            <button class="govuk-button" id="uploadButton" type="submit">@Constants.ContinueButtonText</button>
            <label class="" id="uploadStatusLabel"></label>
        </div>
    }
</div>

@Html.ActionLink(Resource.NotificationOptionsLink, "Index", "Options", new { id = @Model.NotificationId, area = "NotificationApplication" }, null)

<script>
    window.addEventListener('pageshow', function (event) {
        if (event.persisted) {
            // Page was loaded from back/forward cache
            // So force a reload
            window.location.reload();
        }
    });

    function disableButton() {
        // Get reference to the file input
        var fileInput = document.getElementById("fileInput");

        // Check if there is a selected file
        if (fileInput && fileInput.files.length > 0)
        {
            var button = document.getElementById("uploadButton");
            var label = document.getElementById("uploadStatusLabel");

            // Disable the button
            button.disabled = true;

            // Show the label with the specified text
            label.innerText = "File upload in progress. Please wait";
        }

        // Get the form element by its ID
        var form = document.getElementById("uploadForm");
        // Use the submit() method to submit the form
        form.submit();
    }
</script>