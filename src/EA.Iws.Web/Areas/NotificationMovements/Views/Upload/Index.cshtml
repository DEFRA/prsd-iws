@model EA.Iws.Web.Areas.NotificationMovements.ViewModels.Upload.UploadViewModel
@using Resources = EA.Iws.Web.Areas.NotificationMovements.Views.Upload.IndexResources
@{
    ViewBag.Title = Resources.Title;
    Layout = "~/Areas/NotificationMovements/Views/Shared/_CreateSummaryLayout.cshtml";
}

<h1 class="heading-large">@Resources.Title</h1>

<p>@Resources.UploadInstructions</p>

<p>
    @Resources.IfYouNeedAnotherCopy
    @Html.ActionLink(Resources.DownloadItAgain, "GenerateDocuments", "Download", Model.MovementIds.ToRouteValueDictionary("movementIds"), null).
</p>

<p>@Resources.PleaseSignPrenotification</p>

<strong class="bold-small">@Resources.UploadSignedPrenotifications @Model.ShipmentNumbers</strong>

@using (Html.BeginForm(null, null, Model.MovementIds.ToRouteValueDictionary("movementIds"), 
    FormMethod.Post, HtmlHelper.AnonymousObjectToHtmlAttributes(new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()
    @Html.Gds().ValidationSummary()

    <div class="form-group @Html.Gds().FormGroupClass(m => m.File)">
        <label for="@Html.NameFor(m => m.File)" class="visually-hidden">@Html.DisplayNameFor(m => m.File)</label>
        @Html.Gds().ValidationMessageFor(m => m.File)
        @Html.Gds().TextBoxFor(m => m.File, new { type = "file" })
    </div>

    <div class="form-group-compound">
        <button class="button" type="submit">@Constants.ContinueButtonText</button>
    </div>

    <div>
        @Html.ActionLink(Resources.NotificationOptionsLink, "Index", "Options",
                new { id = ViewBag.NotificationId, area = "NotificationApplication" }, null)
    </div>
}