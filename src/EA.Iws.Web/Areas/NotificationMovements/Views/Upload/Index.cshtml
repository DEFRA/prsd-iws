@model EA.Iws.Web.Areas.NotificationMovements.ViewModels.Upload.UploadViewModel
@using Resources = EA.Iws.Web.Areas.NotificationMovements.Views.Upload.IndexResources
@{
    ViewBag.Title = Resources.Title;
    Layout = "~/Areas/NotificationMovements/Views/Shared/_CreateSummaryLayout.cshtml";
}

<h1 class="govuk-heading-l">@Resources.Title</h1>

<p>@Resources.UploadInstructions</p>

<p>
    @Resources.IfYouNeedAnotherCopy
    @Html.ActionLink(Resources.DownloadItAgain, "GenerateDocuments", "Download", Model.MovementIds.ToRouteValueDictionary("movementIds"), null).
</p>

<p>@Resources.PleaseSignPrenotification</p>

<strong class="bold-small">@Resources.UploadSignedPrenotifications @Model.ShipmentNumbers</strong>

@using (Html.BeginForm(null, null, Model.MovementIds.ToRouteValueDictionary("movementIds"),
    FormMethod.Post, HtmlHelper.AnonymousObjectToHtmlAttributes(new { enctype = "multipart/form-data", id = "uploadForm" })))
{
    @Html.AntiForgeryToken()
    @Html.Gds().ValidationSummary()

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.File)">
        <label for="@Html.NameFor(m => m.File)" class="visually-hidden">@Html.DisplayNameFor(m => m.File)</label>
        @Html.Gds().ValidationMessageFor(m => m.File)
        @Html.Gds().TextBoxFor(m => m.File, new { type = "file", id = "fileInput" })
    </div>

    <div class="form-group-compound">
        <button id="uploadButton" class="govuk-button" type="submit">@Constants.ContinueButtonText</button>
        <label class="" id="uploadStatusLabel"></label>
    </div>

    <div>
        @Html.ActionLink(Resources.NotificationOptionsLink, "Index", "Options",
                new { id = ViewBag.NotificationId, area = "NotificationApplication" }, null)
    </div>
}

<script>
    window.addEventListener('pageshow', function (event) {
        if (event.persisted) {
            // Page was loaded from back/forward cache
            // So force a reload
            window.location.reload();
        }
    });

    function disableButton() {
        // Get reference to the file input
        var fileInput = document.getElementById("fileInput");

        // Check if there is a selected file
        if (fileInput && fileInput.files.length > 0)
        {
            var button = document.getElementById("uploadButton");
            var label = document.getElementById("uploadStatusLabel");

            // Disable the button
            button.disabled = true;

            // Show the label with the specified text
            label.innerText = "File upload in progress. Please wait";
        }

        // Get the form element by its ID
        var form = document.getElementById("uploadForm");
        // Use the submit() method to submit the form
        form.submit();
    }
</script>