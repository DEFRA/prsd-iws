@model EA.Iws.Web.Areas.NotificationMovements.ViewModels.Create.CreateMovementsViewModel
@using Resources = EA.Iws.Web.Areas.NotificationMovements.Views.Create.IndexResources

@{
    ViewBag.Title = Resources.Title;
    Layout = "~/Areas/NotificationMovements/Views/Shared/_CreateSummaryLayout.cshtml";
}

<h1 class="govuk-heading-l">@Resources.Title</h1>

<p>
    @Resources.ShipmentSchedule
    @Html.Gds().DisplayShortDateRangeFor(m => m.StartDate, m => m.EndDate).
</p>

<p>
    @Resources.CreateSummary
    <ul class="list-bullet">
        <li>@Resources.SameDay</li>
        <li>@Resources.SameQuantity</li>
        <li>@Resources.SamePackaging</li>
    </ul>
</p>

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    @Html.Gds().ValidationSummary()
    @Html.HiddenFor(m => m.StartDate)
    @Html.HiddenFor(m => m.EndDate)
    @Html.HiddenFor(m => m.NotificationUnits)
    @Html.HiddenFor(m => m.PackagingTypes.ShowEnumValue)

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Day) @Html.Gds().FormGroupClass(m => m.Month) @Html.Gds().FormGroupClass(m => m.Year)">
        <fieldset>

            <h2 class="heading-small">@Resources.ActualDateOfShipment</h2>

            <div class="form-date">
                @Html.Gds().HintParagraph(Model.DateHintText)
                @Html.Gds().ValidationMessageFor(m => m.Day)
                @Html.Gds().ValidationMessageFor(m => m.Month)
                @Html.Gds().ValidationMessageFor(m => m.Year)
                <div class="govuk-form-group form-group-day">
                    @Html.Gds().LabelFor(m => m.Day, false)
                    @Html.Gds().TextBoxFor(m => m.Day, new { type = "number", min = "1", max = "31" })
                </div>
                <div class="govuk-form-group form-group-month">
                    @Html.Gds().LabelFor(m => m.Month, false)
                    @Html.Gds().TextBoxFor(m => m.Month, new { type = "number", min = "1", max = "12" })
                </div>
                <div class="govuk-form-group form-group-year">
                    @Html.Gds().LabelFor(m => m.Year, false)
                    @Html.Gds().TextBoxFor(m => m.Year, new { type = "number", min = "2015" })
                </div>
            </div>
        </fieldset>
    </div>

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.NumberToCreate)">
        @Html.Gds().LabelFor(m => m.NumberToCreate, new { @class = "form-label-bold" }, "&nbsp;")
        @Html.Gds().HintParagraph(Resources.NunmberToCreateHint)
        @Html.Gds().ValidationMessageFor(m => m.NumberToCreate)
        @Html.Gds().TextBoxFor(m => m.NumberToCreate, new { @class = "form-control-narrow" })
    </div>

    <header class="hgroup">
        <h2 class="heading-small">@Resources.QuantityTitle</h2>
        <p>@Resources.QuantityDescription</p>
    </header>

    for (int i = 0; i < Model.AvailableUnits.Count; i++)
    {
        @Html.HiddenFor(m => m.AvailableUnits[i])
    }

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Quantity)">
        @Html.Gds().LabelFor(m => m.Quantity, false)
        @Html.Gds().ValidationMessageFor(m => m.Quantity)
        <div class="grid-row">
            <div class="column-third">
                @Html.Gds().TextBoxFor(m => m.Quantity, new { @class = "form-control form-control-wide" })
            </div>
            <div class="column-third">
                @Html.Gds().DropDownListFor(m => m.Units, Model.UnitsSelectList, new { @class = "govuk-select" })
            </div>
        </div>
    </div>

    <header class="hgroup">
        <h2 class="heading-small">@Resources.PackagingTitle</h2>
        <p>@Resources.PackagingDescription</p>
    </header>

    <div class="govuk-form-group">
        @Html.Gds().ValidationMessageFor(m => m.PackagingTypes)
        <fieldset class="govuk-fieldset">
            <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                @for (int i = 0; i < Model.PackagingTypes.PossibleValues.Count; i++)
                {
                    MvcHtmlString idForThisCheckBox = Html.NameFor(m => m.PackagingTypes.PossibleValues[i]);

                    <div class="govuk-checkboxes__item">
                        @Html.CheckBoxFor(m => m.PackagingTypes.PossibleValues[i].Selected, new { id = idForThisCheckBox, @class = "govuk-checkboxes__input" })
                        <label class="govuk-label govuk-checkboxes__label" for="@idForThisCheckBox">
                            @if (Model.PackagingTypes.ShowEnumValue)
                            {
                                @Html.DisplayFor(m => m.PackagingTypes.PossibleValues[i].Value)
                                @Html.Raw(" - ")
                            }
                            @Html.DisplayFor(m => m.PackagingTypes.PossibleValues[i].Text)
                        </label>
                    </div>

                    @Html.HiddenFor(m => m.PackagingTypes.PossibleValues[i].Text)
                    @Html.HiddenFor(m => m.PackagingTypes.PossibleValues[i].Value)
                }
            </div>
        </fieldset>
    </div>

    <div class="govuk-form-group">
        <p>
            <button class="govuk-button" type="submit">@Constants.ContinueButtonText</button>
        </p>
    </div>
}

@Html.ActionLink(Resources.OptionsLink,
    "Index",
    "Options",
    new { area = "NotificationApplication", id = ViewBag.NotificationId },
    null)