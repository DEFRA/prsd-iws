@model EA.Iws.Web.Areas.NotificationMovements.ViewModels.Create.QuantityViewModel
@{
    Layout = "~/Areas/NotificationMovements/Views/Shared/_CreateSummaryLayout.cshtml";
    ViewBag.Title = "Actual quantity";
}

<header class="hgroup">
    <h1 class="heading-large">How much waste is being exported?</h1>
    <p>Enter the actual quantity of waste as a number. You can add decimal figures if necessary.</p>
</header>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Gds().ValidationSummary()

    @Html.HiddenFor(m => m.NotificationUnits)
    for (int i = 0; i < Model.AvailableUnits.Count; i++)
    {
        @Html.HiddenFor(m => m.AvailableUnits[i])
    }
    for (int i = 0; i < Model.MovementNumbers.Count; i++)
    {
        @Html.HiddenFor(m => m.MovementNumbers[i])
    }

    <div class="form-group @Html.Gds().FormGroupClass(m => m.Quantity)">
        @Html.Gds().LabelFor(m => m.Quantity, false)
        @Html.Gds().ValidationMessageFor(m => m.Quantity)
        <div class="grid-row">
            <div class="column-third">
                @Html.Gds().TextBoxFor(m => m.Quantity, new { @class = "form-control form-control-wide" })
            </div>
            <div class="column-third">
                @Html.Gds().DropDownListFor(m => m.Units, Model.UnitsSelectList, new { @class = "form-control form-control-wide" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <button class="button" type="submit">@Constants.ContinueButtonText</button>
    </div>
}