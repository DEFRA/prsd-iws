@using Resource = EA.Iws.Web.Areas.AdminImportNotificationMovements.Views.Capture.CreateEditResources
@model EA.Iws.Web.Areas.AdminImportNotificationMovements.ViewModels.Capture.CaptureViewModel

@{
    ViewBag.Title = Resource.PageTitle;
}

@section top_of_page {
    @if (ViewBag.IsSaved)
    {
        <div class="grid-row">
            <div class="column-full">
                <div id="status-box-saved" name="status-box-saved">
                    <h2 class="heading-small">@Resource.ChangesSaved</h2>
                </div>
            </div>
        </div>
    }
}

<div class="grid-row container">
    <div class="stickem-row stickem-container">
        <div class="column-two-thirds">
            <h1 class="govuk-heading-l">@Resource.MainHeading</h1>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.Gds().ValidationSummary()
                @Html.HiddenFor(m => m.NotificationType)
                @Html.HiddenFor(m => m.ShipmentNumber)
                @Html.HiddenFor(m => m.IsReceived)
                @Html.HiddenFor(m => m.IsOperationCompleted)
                @Html.HiddenFor(m => m.IsRejected)
                @Html.HiddenFor(m => m.IsPartiallyRejected)

                <h1 class="data-item bold-xlarge">@string.Format(Resource.ShipmentNumber, Model.ShipmentNumber)</h1>

                @Html.Partial("_PrenotifyReadOnly")

                <hr />

                if (Model.IsReceived || Model.IsRejected || Model.IsPartiallyRejected)
                {
                    @Html.HiddenFor(m => m.Receipt.ReceivedDate.Date)
                    @Html.HiddenFor(m => m.Receipt.RejectionReason)
                    @Html.HiddenFor(m => m.Receipt.ActualQuantity)
                    @Html.HiddenFor(m => m.Receipt.ActualUnits)
                    @Html.HiddenFor(m => m.Receipt.RejectedQuantity)
                    @Html.HiddenFor(m => m.Receipt.RejectedUnits)
                    @Html.HiddenFor(m => m.Receipt.ShipmentTypes)
                    @Html.Partial("_ReceiptReadOnly", Model.Receipt)
                }
                else
                {
                    @Html.EditorFor(m => m.Receipt)
                }

                if (Model.Receipt.ShipmentTypes == ShipmentType.Rejected)
                {
                    <hr id="hrAfterReceipt" style="display:none" />
                }
                else
                {
                    <hr id="hrAfterReceipt" style="display:block" />
                }

                if (Model.IsOperationCompleted)
                {
                    @Html.HiddenFor(m => m.Recovery.RecoveryDate.Date)
                    @Html.Partial("_OperationReadOnly", Model.Recovery)
                }
                else if (!Model.IsRejected)
                {
                    @Html.EditorFor(m => m.Recovery)
                }

                if (Model.Receipt.ShipmentTypes == ShipmentType.Rejected)
                {
                    <hr id="hrAfterRecovery" style="display:none" />
                }
                else
                {
                    <hr id="hrAfterRecovery" style="display:block" />
                }

                if (Model.HasComments)
                {
                    @Html.HiddenFor(m => m.StatsMarking)
                    @Html.HiddenFor(m => m.Comments)
                    @Html.Partial("_CommentsReadOnly")
                }
                else
                {
                    @Html.Partial("_Comments")
                }

                <button class="govuk-button" type="submit">@Constants.ContinueButtonText</button>
            }

        </div>

        @Html.Partial("_ChangeShipment")

    </div>
</div>
@section scripts {
    @Html.Partial("_Scripts")

    <script>
        $(function () {
            @if (!Model.IsReceived)
            {
                @:$("#Receipt_ReceivedDate_Date").focus();
            }
            else if (!Model.IsOperationCompleted)
            {
                @:$("#Recovery_RecoveryDate_Date").focus();
            }
        });
    </script>
}
