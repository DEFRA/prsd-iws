//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EA.Iws.Web.Areas.Reports.Controllers {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ComplianceGuidanceResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ComplianceGuidanceResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EA.Iws.Web.Areas.Reports.Controllers.ComplianceGuidanceResources", typeof(ComplianceGuidanceResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AMBER with a black exclamation indicates non-compliance to a lesser degree.
        /// </summary>
        public static string AmberText {
            get {
                return ResourceManager.GetString("AmberText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Colour/Symbol key.
        /// </summary>
        public static string ColourHeaderText {
            get {
                return ResourceManager.GetString("ColourHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This shows the name of the consignee/importer for the notification.
        /// </summary>
        public static string Consignee {
            get {
                return ResourceManager.GetString("Consignee", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This shows whether the notification has expired by having gone passed the &apos;Consent valid to&apos; date when this report was run.
        /// </summary>
        public static string FileExpired {
            get {
                return ResourceManager.GetString("FileExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GREEN with a black tick overlay indicates compliance.
        /// </summary>
        public static string GreenText {
            get {
                return ResourceManager.GetString("GreenText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This shows whether there are gaps in the sequential list of shipments for the notification.
        /// </summary>
        public static string MissingShipments {
            get {
                return ResourceManager.GetString("MissingShipments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The colour indicates the level of compliance based on data shown in the previous cell. 0 = GREEN, 1 to 10 = AMBER and 11 or more = RED.
        /// </summary>
        public static string MissingShipmentsColour {
            get {
                return ResourceManager.GetString("MissingShipmentsColour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This shows the total number of shipments recorded in the service that haven&apos;t met prenotifcation rules.
        /// </summary>
        public static string NoPrenotificationCount {
            get {
                return ResourceManager.GetString("NoPrenotificationCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This shows the relevant notification number.
        /// </summary>
        public static string NotificationNumber {
            get {
                return ResourceManager.GetString("NotificationNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This shows the name of the notifier/exporter for the notification.
        /// </summary>
        public static string Notifier {
            get {
                return ResourceManager.GetString("Notifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The colour indicates the level of compliance based on data shown in the previous cell. 0 = GREEN, 1 to 5 = AMBER and 6 or more = RED.
        /// </summary>
        public static string OverActiveLoads {
            get {
                return ResourceManager.GetString("OverActiveLoads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For export notifications: This shows the number of shipments that are &apos;active&apos; which exceed the number of permitted active loads approved against the financial provision. For import notifications: not monitiored by the service N/A.
        /// </summary>
        public static string OverLimitShipments {
            get {
                return ResourceManager.GetString("OverLimitShipments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This shows whether the total intended number of shipments consented on the notification has been exceeded (Y/N).
        /// </summary>
        public static string OverShipments {
            get {
                return ResourceManager.GetString("OverShipments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The colour indicates compliance based on data shown in the previous cell. N = GREEN, and Y = RED.
        /// </summary>
        public static string OverShipmentsColour {
            get {
                return ResourceManager.GetString("OverShipmentsColour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This shows whether the total intended quantity consented on the notification has been exceeded (Y/N).
        /// </summary>
        public static string OverTonnage {
            get {
                return ResourceManager.GetString("OverTonnage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The colour indicates compliance based on data shown in the previous cell. N = GREEN, and Y = RED.
        /// </summary>
        public static string OverTonnageColour {
            get {
                return ResourceManager.GetString("OverTonnageColour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The colour indicates the level of compliance based on data shown in the previous cell. 0 = GREEN, 1 to 10 = AMBER and 11 or more = RED.
        /// </summary>
        public static string PreNotificationColour {
            get {
                return ResourceManager.GetString("PreNotificationColour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RED with a white cross indicates non-compliance to a greater degree warranting action.
        /// </summary>
        public static string RedText {
            get {
                return ResourceManager.GetString("RedText", resourceCulture);
            }
        }
    }
}
