@using EA.Iws.Web.Views.CopyFromNotification
@model EA.Iws.Web.ViewModels.CopyFromNotification.CopyFromNotificationViewModel

@{
    ViewBag.Title = CopyFromNotificationResources.Title;
}

@if (Model.Notifications.Any())
{
    <header class="hgroup">
        <h1 class="govuk-heading-l">@CopyFromNotificationResources.Header</h1>
        <p>@CopyFromNotificationResources.HeaderDescription</p>
    </header>

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.Gds().ValidationSummary()

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.SelectedNotification)">
            @Html.Gds().ValidationMessageFor(m => m.SelectedNotification)
            <table title=@CopyFromNotificationResources.TableTitleForNotificationSummary class="govuk-table">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header">
                            @CopyFromNotificationResources.ThNotificationNumber
                        </th>
                        <th scope="col" class="govuk-table__header">
                            @CopyFromNotificationResources.ThExporter
                        </th>
                        <th scope="col" class="govuk-table__header">
                            @CopyFromNotificationResources.ThImporter
                        </th>
                        <th scope="col" class="govuk-table__header">
                            @CopyFromNotificationResources.ThWasteType
                        </th>
                        <th scope="col" class="govuk-table__header">
                            @CopyFromNotificationResources.ThSelect
                        </th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    @for (int i = 0; i < Model.Notifications.Count; i++)
                    {
                        var radioId = "radio" + i;
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">
                                @Html.DisplayFor(m => m.Notifications[i].Number)
                            </td>
                            <td class="govuk-table__cell">
                                @Html.DisplayFor(m => m.Notifications[i].ExporterName)
                            </td>
                            <td class="govuk-table__cell">
                                @Html.DisplayFor(m => m.Notifications[i].ImporterName)
                            </td>
                            <td class="govuk-table__cell">
                                @Html.DisplayFor(m => m.Notifications[i].WasteName)
                            </td>
                            <td class="govuk-table__cell">
                                @Html.RadioButtonFor(m => m.SelectedNotification, Model.Notifications[i].Id, new { id = radioId, title = Model.Notifications[i].Number })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        for (int i = 0; i < Model.Notifications.Count; i++)
        {
            @Html.HiddenFor(m => m.Notifications[i].Id)
            @Html.HiddenFor(m => m.Notifications[i].ExporterName)
            @Html.HiddenFor(m => m.Notifications[i].ImporterName)
            @Html.HiddenFor(m => m.Notifications[i].Number)
            @Html.HiddenFor(m => m.Notifications[i].WasteName)
        }

        <div class="govuk-form-group">
            <button class="govuk-button" type="submit">@Constants.ContinueButtonText</button>
        </div>
    }
}
else
{
    <h2 class="heading-large">@CopyFromNotificationResources.NoNotificationsAvailable</h2>
    <p>
        @CopyFromNotificationResources.NoNotificationsAvailableDescription
    </p>

    @Html.ActionLink(Constants.ContinueButtonText, "Index", "Exporter", new { area = "NotificationApplication" }, new { @class = "button" })
}