//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EA.Iws.Web.Views.ChangeNotificationOwner {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ChangeNotificationOwnerResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ChangeNotificationOwnerResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EA.Iws.Web.Views.ChangeNotificationOwner.ChangeNotificationOwnerResources", typeof(ChangeNotificationOwnerResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the email address that was used to register their account and they enter when logging into the service. If they are not registered to use IWS Online, they will need to do this first..
        /// </summary>
        public static string ChangeOwnerHint {
            get {
                return ResourceManager.GetString("ChangeOwnerHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assign this notification to another user.
        /// </summary>
        public static string ChangeOwnerTitle {
            get {
                return ResourceManager.GetString("ChangeOwnerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is your responsibility as the current owner to advise the new owner of what they can and can&apos;t do on your notification. Once transferred, assigning a notification allows the new owner to perform the same activities as the current owner..
        /// </summary>
        public static string ConfirmResponsibility {
            get {
                return ResourceManager.GetString("ConfirmResponsibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to assign notification {0} to another user?.
        /// </summary>
        public static string ConfirmTitle {
            get {
                return ResourceManager.GetString("ConfirmTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notification {0} has been successfully assigned to {1}..
        /// </summary>
        public static string NotificationReassigned {
            get {
                return ResourceManager.GetString("NotificationReassigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notification owner changed.
        /// </summary>
        public static string SuccessTitle {
            get {
                return ResourceManager.GetString("SuccessTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are currently the owner of this notification..
        /// </summary>
        public static string YouAreCurrentlyTheOwner {
            get {
                return ResourceManager.GetString("YouAreCurrentlyTheOwner", resourceCulture);
            }
        }
    }
}
