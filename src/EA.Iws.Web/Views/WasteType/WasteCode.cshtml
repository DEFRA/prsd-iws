@model EA.Iws.Web.ViewModels.WasteType.WasteCodeViewModel
@{
    ViewBag.Title = "Waste Code";
}
<header class="hgroup">
    <div class="form-group">
        @Html.Gds().HintParagraph("Step 1 of 4")
    </div>
    <h2 class="heading-large">Waste Identification</h2>
    <p>Select the appropriate basel code or OECD code to identify your waste <br/>
    If there is no suitable code then select not listed</p>
</header>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Gds().ValidationSummary()
    @Html.HiddenFor(m => m.NotificationId)
    <div>
        <div class="form-group @Html.Gds().FormGroupClass(m => m.SelectedWasteCode)">
            @Html.Gds().LabelFor(m => m.SelectedWasteCode)

            <select onchange=" getComboDescription(this) " data-val="true" data-val-required="The SelectedWasteCode field is required." id="code-list" name="SelectedWasteCode">
                <option description="" selected="selected" value=""></option>
                @foreach (var wasteCode in Model.WasteCodes)
                {
                    <option description="@wasteCode.Description" value="@wasteCode.Id">@wasteCode.Code</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label id="descriptionTextArea"></label>
        </div>

    </div>
    <div class="form-group">
        <button class="button" type="submit">Continue</button>
    </div>
}

@section scripts{
    <script>
        (function($) {
            $(function() {
                $('#code-list').selectToAutocomplete();
            });
        })(jQuery);

        function getComboDescription(sel) {
            if (sel.selectedIndex > 0) {
                document.getElementById("descriptionTextArea").innerHTML = sel.options[sel.selectedIndex].getAttribute('description');
            }
        }
    </script>
}